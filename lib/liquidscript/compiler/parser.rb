

module Liquidscript
  module Compiler
    class Parser

      def initialize(scanner)
        @tokens = scanner.each
      end

      def compile
        @top = parse(@tokens)
      end

      def compile?
        compile
        true
      rescue
        false
      end

      def top
        @top || compile
      end

      def type(part)
        part[0].to_s.upcase.to_sym
      end

      
# This file assumes that the output of the generator will be placed
# within a module or a class.  However, the module/class requires a
# `type` method, which takes a terminal and gives its type, as a
# symbol.  These types should line up with the terminals that were
# defined in the original grammar.

# The actions to take during parsing.  In every state, there are a
# set of acceptable peek tokens; this table tells the parser what
# to do on each acceptable peek token.  The possible actions include
# `:accept`, `:reduce`, and `:state`; `:accept` means to accept the
# input and return the value of the pasing.  `:reduce` means to
# reduce the top of the stack into a given nonterminal.  `:state`
# means to transition to another state.
#
# @return [Array<Hash<(Symbol, Array<(Symbol, Numeric)>)>>]
ACTION_TABLE = [{:main=>[:state, 1],
  :"expressions.maybe"=>[:state, 2],
  :expressions=>[:state, 3],
  :expression=>[:state, 4],
  :conditional=>[:state, 5],
  :class=>[:state, 6],
  :module=>[:state, 7],
  :loop=>[:state, 8],
  :action=>[:state, 9],
  :exception=>[:state, 10],
  :directive=>[:state, 11],
  :vexpression=>[:state, 12],
  :NEWLINE=>[:state, 13],
  :vvexpression=>[:state, 14],
  :IF=>[:state, 15],
  :UNLESS=>[:state, 16],
  :CLASS=>[:state, 17],
  :MODULE=>[:state, 18],
  :WHILE=>[:state, 19],
  :FOR=>[:state, 20],
  :RETURN=>[:state, 21],
  :ACTION=>[:state, 22],
  :TRY=>[:state, 23],
  :COLON=>[:state, 24],
  :NUMBER=>[:state, 25],
  :ISTRING=>[:state, 26],
  :SSTRING=>[:state, 27],
  :KEYWORD=>[:state, 28],
  :REGEX=>[:state, 29],
  :interpolation=>[:state, 30],
  :PLUS=>[:state, 31],
  :MINUS=>[:state, 32],
  :object=>[:state, 33],
  :array=>[:state, 34],
  :function=>[:state, 35],
  :PREUNOP=>[:state, 36],
  :UNOP=>[:state, 37],
  :HEREDOC_REF=>[:state, 38],
  :IHEREDOC_REF=>[:state, 39],
  :LPAREN=>[:state, 40],
  :heredoc=>[:state, 41],
  :IDENTIFIER=>[:state, 42],
  :"interpolation.string"=>[:state, 43],
  :"interpolation.heredoc"=>[:state, 44],
  :LBRACE=>[:state, 45],
  :LBRACK=>[:state, 46],
  :ARROW=>[:state, 47],
  :HEREDOC=>[:state, 48],
  :IHEREDOC=>[:state, 49],
  :ISTRING_BEGIN=>[:state, 50],
  :IHEREDOC_BEGIN=>[:state, 51],
  :$end=>[:reduce, 3]},
 {:$end=>[:state, 52]},
 {:$end=>[:reduce, 1]},
 {:expression=>[:state, 53],
  :conditional=>[:state, 5],
  :class=>[:state, 6],
  :module=>[:state, 7],
  :loop=>[:state, 8],
  :action=>[:state, 9],
  :exception=>[:state, 10],
  :directive=>[:state, 11],
  :vexpression=>[:state, 12],
  :NEWLINE=>[:state, 13],
  :vvexpression=>[:state, 14],
  :IF=>[:state, 15],
  :UNLESS=>[:state, 16],
  :CLASS=>[:state, 17],
  :MODULE=>[:state, 18],
  :WHILE=>[:state, 19],
  :FOR=>[:state, 20],
  :RETURN=>[:state, 21],
  :ACTION=>[:state, 22],
  :TRY=>[:state, 23],
  :COLON=>[:state, 24],
  :NUMBER=>[:state, 25],
  :ISTRING=>[:state, 26],
  :SSTRING=>[:state, 27],
  :KEYWORD=>[:state, 28],
  :REGEX=>[:state, 29],
  :interpolation=>[:state, 30],
  :PLUS=>[:state, 31],
  :MINUS=>[:state, 32],
  :object=>[:state, 33],
  :array=>[:state, 34],
  :function=>[:state, 35],
  :PREUNOP=>[:state, 36],
  :UNOP=>[:state, 37],
  :HEREDOC_REF=>[:state, 38],
  :IHEREDOC_REF=>[:state, 39],
  :LPAREN=>[:state, 40],
  :heredoc=>[:state, 41],
  :IDENTIFIER=>[:state, 42],
  :"interpolation.string"=>[:state, 43],
  :"interpolation.heredoc"=>[:state, 44],
  :LBRACE=>[:state, 45],
  :LBRACK=>[:state, 46],
  :ARROW=>[:state, 47],
  :HEREDOC=>[:state, 48],
  :IHEREDOC=>[:state, 49],
  :ISTRING_BEGIN=>[:state, 50],
  :IHEREDOC_BEGIN=>[:state, 51],
  :$end=>[:reduce, 2],
  :RBRACE=>[:reduce, 2]},
 {:$default=>[:reduce, 5]},
 {:$default=>[:reduce, 9]},
 {:$default=>[:reduce, 10]},
 {:$default=>[:reduce, 11]},
 {:$default=>[:reduce, 12]},
 {:$default=>[:reduce, 13]},
 {:$default=>[:reduce, 14]},
 {:$default=>[:reduce, 15]},
 {:LPAREN=>[:state, 54],
  :RANGE=>[:state, 55],
  :ERANGE=>[:state, 56],
  :BINOP=>[:state, 57],
  :MINUS=>[:state, 58],
  :PLUS=>[:state, 59],
  :UNOP=>[:state, 60],
  :PROP=>[:state, 61],
  :LBRACK=>[:state, 62],
  :$end=>[:reduce, 16],
  :IF=>[:reduce, 16],
  :UNLESS=>[:reduce, 16],
  :CLASS=>[:reduce, 16],
  :MODULE=>[:reduce, 16],
  :WHILE=>[:reduce, 16],
  :FOR=>[:reduce, 16],
  :RETURN=>[:reduce, 16],
  :ACTION=>[:reduce, 16],
  :TRY=>[:reduce, 16],
  :COLON=>[:reduce, 16],
  :NUMBER=>[:reduce, 16],
  :ISTRING=>[:reduce, 16],
  :SSTRING=>[:reduce, 16],
  :KEYWORD=>[:reduce, 16],
  :REGEX=>[:reduce, 16],
  :ISTRING_BEGIN=>[:reduce, 16],
  :IHEREDOC_BEGIN=>[:reduce, 16],
  :LBRACE=>[:reduce, 16],
  :ARROW=>[:reduce, 16],
  :PREUNOP=>[:reduce, 16],
  :HEREDOC_REF=>[:reduce, 16],
  :IHEREDOC_REF=>[:reduce, 16],
  :HEREDOC=>[:reduce, 16],
  :IHEREDOC=>[:reduce, 16],
  :IDENTIFIER=>[:reduce, 16],
  :NEWLINE=>[:reduce, 16],
  :RBRACE=>[:reduce, 16],
  :RBRACK=>[:reduce, 16]},
 {:$default=>[:reduce, 17]},
 {:EQUAL=>[:state, 63],
  :$end=>[:reduce, 43],
  :IF=>[:reduce, 43],
  :UNLESS=>[:reduce, 43],
  :CLASS=>[:reduce, 43],
  :MODULE=>[:reduce, 43],
  :WHILE=>[:reduce, 43],
  :FOR=>[:reduce, 43],
  :RETURN=>[:reduce, 43],
  :ACTION=>[:reduce, 43],
  :TRY=>[:reduce, 43],
  :COLON=>[:reduce, 43],
  :NUMBER=>[:reduce, 43],
  :ISTRING=>[:reduce, 43],
  :SSTRING=>[:reduce, 43],
  :KEYWORD=>[:reduce, 43],
  :REGEX=>[:reduce, 43],
  :ISTRING_BEGIN=>[:reduce, 43],
  :IHEREDOC_BEGIN=>[:reduce, 43],
  :PLUS=>[:reduce, 43],
  :MINUS=>[:reduce, 43],
  :LBRACE=>[:reduce, 43],
  :LBRACK=>[:reduce, 43],
  :ARROW=>[:reduce, 43],
  :PREUNOP=>[:reduce, 43],
  :UNOP=>[:reduce, 43],
  :HEREDOC_REF=>[:reduce, 43],
  :IHEREDOC_REF=>[:reduce, 43],
  :LPAREN=>[:reduce, 43],
  :HEREDOC=>[:reduce, 43],
  :IHEREDOC=>[:reduce, 43],
  :RANGE=>[:reduce, 43],
  :ERANGE=>[:reduce, 43],
  :BINOP=>[:reduce, 43],
  :PROP=>[:reduce, 43],
  :IDENTIFIER=>[:reduce, 43],
  :NEWLINE=>[:reduce, 43],
  :RBRACE=>[:reduce, 43],
  :RBRACK=>[:reduce, 43],
  :RPAREN=>[:reduce, 43],
  :COMMA=>[:reduce, 43]},
 {:LPAREN=>[:state, 64]},
 {:LPAREN=>[:state, 65]},
 {:IDENTIFIER=>[:state, 66]},
 {:IDENTIFIER=>[:state, 67]},
 {:LPAREN=>[:state, 68]},
 {:LPAREN=>[:state, 69]},
 {:vexpression=>[:state, 70],
  :NUMBER=>[:state, 25],
  :ISTRING=>[:state, 26],
  :SSTRING=>[:state, 27],
  :KEYWORD=>[:state, 28],
  :REGEX=>[:state, 29],
  :interpolation=>[:state, 30],
  :PLUS=>[:state, 31],
  :MINUS=>[:state, 32],
  :object=>[:state, 33],
  :array=>[:state, 34],
  :function=>[:state, 35],
  :PREUNOP=>[:state, 36],
  :UNOP=>[:state, 37],
  :HEREDOC_REF=>[:state, 38],
  :IHEREDOC_REF=>[:state, 39],
  :LPAREN=>[:state, 40],
  :heredoc=>[:state, 41],
  :vvexpression=>[:state, 14],
  :"interpolation.string"=>[:state, 43],
  :"interpolation.heredoc"=>[:state, 44],
  :LBRACE=>[:state, 45],
  :LBRACK=>[:state, 46],
  :ARROW=>[:state, 47],
  :HEREDOC=>[:state, 48],
  :IHEREDOC=>[:state, 49],
  :IDENTIFIER=>[:state, 42],
  :ISTRING_BEGIN=>[:state, 50],
  :IHEREDOC_BEGIN=>[:state, 51]},
 {:$default=>[:reduce, 95]},
 {:LBRACE=>[:state, 71]},
 {:LBRACK=>[:state, 72]},
 {:$default=>[:reduce, 19]},
 {:$default=>[:reduce, 20]},
 {:$default=>[:reduce, 21]},
 {:$default=>[:reduce, 22]},
 {:$default=>[:reduce, 23]},
 {:$default=>[:reduce, 24]},
 {:vexpression=>[:state, 73],
  :NUMBER=>[:state, 25],
  :ISTRING=>[:state, 26],
  :SSTRING=>[:state, 27],
  :KEYWORD=>[:state, 28],
  :REGEX=>[:state, 29],
  :interpolation=>[:state, 30],
  :PLUS=>[:state, 31],
  :MINUS=>[:state, 32],
  :object=>[:state, 33],
  :array=>[:state, 34],
  :function=>[:state, 35],
  :PREUNOP=>[:state, 36],
  :UNOP=>[:state, 37],
  :HEREDOC_REF=>[:state, 38],
  :IHEREDOC_REF=>[:state, 39],
  :LPAREN=>[:state, 40],
  :heredoc=>[:state, 41],
  :vvexpression=>[:state, 14],
  :"interpolation.string"=>[:state, 43],
  :"interpolation.heredoc"=>[:state, 44],
  :LBRACE=>[:state, 45],
  :LBRACK=>[:state, 46],
  :ARROW=>[:state, 47],
  :HEREDOC=>[:state, 48],
  :IHEREDOC=>[:state, 49],
  :IDENTIFIER=>[:state, 42],
  :ISTRING_BEGIN=>[:state, 50],
  :IHEREDOC_BEGIN=>[:state, 51]},
 {:vexpression=>[:state, 74],
  :NUMBER=>[:state, 25],
  :ISTRING=>[:state, 26],
  :SSTRING=>[:state, 27],
  :KEYWORD=>[:state, 28],
  :REGEX=>[:state, 29],
  :interpolation=>[:state, 30],
  :PLUS=>[:state, 31],
  :MINUS=>[:state, 32],
  :object=>[:state, 33],
  :array=>[:state, 34],
  :function=>[:state, 35],
  :PREUNOP=>[:state, 36],
  :UNOP=>[:state, 37],
  :HEREDOC_REF=>[:state, 38],
  :IHEREDOC_REF=>[:state, 39],
  :LPAREN=>[:state, 40],
  :heredoc=>[:state, 41],
  :vvexpression=>[:state, 14],
  :"interpolation.string"=>[:state, 43],
  :"interpolation.heredoc"=>[:state, 44],
  :LBRACE=>[:state, 45],
  :LBRACK=>[:state, 46],
  :ARROW=>[:state, 47],
  :HEREDOC=>[:state, 48],
  :IHEREDOC=>[:state, 49],
  :IDENTIFIER=>[:state, 42],
  :ISTRING_BEGIN=>[:state, 50],
  :IHEREDOC_BEGIN=>[:state, 51]},
 {:$default=>[:reduce, 27]},
 {:$default=>[:reduce, 28]},
 {:$default=>[:reduce, 29]},
 {:vexpression=>[:state, 75],
  :NUMBER=>[:state, 25],
  :ISTRING=>[:state, 26],
  :SSTRING=>[:state, 27],
  :KEYWORD=>[:state, 28],
  :REGEX=>[:state, 29],
  :interpolation=>[:state, 30],
  :PLUS=>[:state, 31],
  :MINUS=>[:state, 32],
  :object=>[:state, 33],
  :array=>[:state, 34],
  :function=>[:state, 35],
  :PREUNOP=>[:state, 36],
  :UNOP=>[:state, 37],
  :HEREDOC_REF=>[:state, 38],
  :IHEREDOC_REF=>[:state, 39],
  :LPAREN=>[:state, 40],
  :heredoc=>[:state, 41],
  :vvexpression=>[:state, 14],
  :"interpolation.string"=>[:state, 43],
  :"interpolation.heredoc"=>[:state, 44],
  :LBRACE=>[:state, 45],
  :LBRACK=>[:state, 46],
  :ARROW=>[:state, 47],
  :HEREDOC=>[:state, 48],
  :IHEREDOC=>[:state, 49],
  :IDENTIFIER=>[:state, 42],
  :ISTRING_BEGIN=>[:state, 50],
  :IHEREDOC_BEGIN=>[:state, 51]},
 {:vexpression=>[:state, 76],
  :NUMBER=>[:state, 25],
  :ISTRING=>[:state, 26],
  :SSTRING=>[:state, 27],
  :KEYWORD=>[:state, 28],
  :REGEX=>[:state, 29],
  :interpolation=>[:state, 30],
  :PLUS=>[:state, 31],
  :MINUS=>[:state, 32],
  :object=>[:state, 33],
  :array=>[:state, 34],
  :function=>[:state, 35],
  :PREUNOP=>[:state, 36],
  :UNOP=>[:state, 37],
  :HEREDOC_REF=>[:state, 38],
  :IHEREDOC_REF=>[:state, 39],
  :LPAREN=>[:state, 40],
  :heredoc=>[:state, 41],
  :vvexpression=>[:state, 14],
  :"interpolation.string"=>[:state, 43],
  :"interpolation.heredoc"=>[:state, 44],
  :LBRACE=>[:state, 45],
  :LBRACK=>[:state, 46],
  :ARROW=>[:state, 47],
  :HEREDOC=>[:state, 48],
  :IHEREDOC=>[:state, 49],
  :IDENTIFIER=>[:state, 42],
  :ISTRING_BEGIN=>[:state, 50],
  :IHEREDOC_BEGIN=>[:state, 51]},
 {:$default=>[:reduce, 32]},
 {:$default=>[:reduce, 33]},
 {:vexpression=>[:state, 77],
  :NUMBER=>[:state, 25],
  :ISTRING=>[:state, 26],
  :SSTRING=>[:state, 27],
  :KEYWORD=>[:state, 28],
  :REGEX=>[:state, 29],
  :interpolation=>[:state, 30],
  :PLUS=>[:state, 31],
  :MINUS=>[:state, 32],
  :object=>[:state, 33],
  :array=>[:state, 34],
  :function=>[:state, 35],
  :PREUNOP=>[:state, 36],
  :UNOP=>[:state, 37],
  :HEREDOC_REF=>[:state, 38],
  :IHEREDOC_REF=>[:state, 39],
  :LPAREN=>[:state, 40],
  :heredoc=>[:state, 41],
  :vvexpression=>[:state, 14],
  :"interpolation.string"=>[:state, 43],
  :"interpolation.heredoc"=>[:state, 44],
  :LBRACE=>[:state, 45],
  :LBRACK=>[:state, 46],
  :ARROW=>[:state, 47],
  :HEREDOC=>[:state, 48],
  :IHEREDOC=>[:state, 49],
  :IDENTIFIER=>[:state, 42],
  :ISTRING_BEGIN=>[:state, 50],
  :IHEREDOC_BEGIN=>[:state, 51]},
 {:$default=>[:reduce, 35]},
 {:$default=>[:reduce, 46]},
 {:$default=>[:reduce, 62]},
 {:$default=>[:reduce, 63]},
 {:RBRACE=>[:state, 78]},
 {:RBRACK=>[:state, 79]},
 {:"function.arguments.maybe"=>[:state, 80],
  :LPAREN=>[:state, 81],
  :LBRACE=>[:reduce, 57]},
 {:$default=>[:reduce, 54]},
 {:$default=>[:reduce, 55]},
 {:vexpression=>[:state, 82],
  :NUMBER=>[:state, 25],
  :ISTRING=>[:state, 26],
  :SSTRING=>[:state, 27],
  :KEYWORD=>[:state, 28],
  :REGEX=>[:state, 29],
  :interpolation=>[:state, 30],
  :PLUS=>[:state, 31],
  :MINUS=>[:state, 32],
  :object=>[:state, 33],
  :array=>[:state, 34],
  :function=>[:state, 35],
  :PREUNOP=>[:state, 36],
  :UNOP=>[:state, 37],
  :HEREDOC_REF=>[:state, 38],
  :IHEREDOC_REF=>[:state, 39],
  :LPAREN=>[:state, 40],
  :heredoc=>[:state, 41],
  :vvexpression=>[:state, 14],
  :"interpolation.string"=>[:state, 43],
  :"interpolation.heredoc"=>[:state, 44],
  :LBRACE=>[:state, 45],
  :LBRACK=>[:state, 46],
  :ARROW=>[:state, 47],
  :HEREDOC=>[:state, 48],
  :IHEREDOC=>[:state, 49],
  :IDENTIFIER=>[:state, 42],
  :ISTRING_BEGIN=>[:state, 50],
  :IHEREDOC_BEGIN=>[:state, 51]},
 {:vexpression=>[:state, 83],
  :NUMBER=>[:state, 25],
  :ISTRING=>[:state, 26],
  :SSTRING=>[:state, 27],
  :KEYWORD=>[:state, 28],
  :REGEX=>[:state, 29],
  :interpolation=>[:state, 30],
  :PLUS=>[:state, 31],
  :MINUS=>[:state, 32],
  :object=>[:state, 33],
  :array=>[:state, 34],
  :function=>[:state, 35],
  :PREUNOP=>[:state, 36],
  :UNOP=>[:state, 37],
  :HEREDOC_REF=>[:state, 38],
  :IHEREDOC_REF=>[:state, 39],
  :LPAREN=>[:state, 40],
  :heredoc=>[:state, 41],
  :vvexpression=>[:state, 14],
  :"interpolation.string"=>[:state, 43],
  :"interpolation.heredoc"=>[:state, 44],
  :LBRACE=>[:state, 45],
  :LBRACK=>[:state, 46],
  :ARROW=>[:state, 47],
  :HEREDOC=>[:state, 48],
  :IHEREDOC=>[:state, 49],
  :IDENTIFIER=>[:state, 42],
  :ISTRING_BEGIN=>[:state, 50],
  :IHEREDOC_BEGIN=>[:state, 51]},
 {:$end=>[:accept, 0]},
 {:$default=>[:reduce, 4]},
 {:"vexpression.parameters.maybe"=>[:state, 84],
  :"vexpression.parameters"=>[:state, 85],
  :vexpression=>[:state, 86],
  :NUMBER=>[:state, 25],
  :ISTRING=>[:state, 26],
  :SSTRING=>[:state, 27],
  :KEYWORD=>[:state, 28],
  :REGEX=>[:state, 29],
  :interpolation=>[:state, 30],
  :PLUS=>[:state, 31],
  :MINUS=>[:state, 32],
  :object=>[:state, 33],
  :array=>[:state, 34],
  :function=>[:state, 35],
  :PREUNOP=>[:state, 36],
  :UNOP=>[:state, 37],
  :HEREDOC_REF=>[:state, 38],
  :IHEREDOC_REF=>[:state, 39],
  :LPAREN=>[:state, 40],
  :heredoc=>[:state, 41],
  :vvexpression=>[:state, 14],
  :"interpolation.string"=>[:state, 43],
  :"interpolation.heredoc"=>[:state, 44],
  :LBRACE=>[:state, 45],
  :LBRACK=>[:state, 46],
  :ARROW=>[:state, 47],
  :HEREDOC=>[:state, 48],
  :IHEREDOC=>[:state, 49],
  :IDENTIFIER=>[:state, 42],
  :ISTRING_BEGIN=>[:state, 50],
  :IHEREDOC_BEGIN=>[:state, 51],
  :RPAREN=>[:reduce, 48]},
 {:vexpression=>[:state, 87],
  :NUMBER=>[:state, 25],
  :ISTRING=>[:state, 26],
  :SSTRING=>[:state, 27],
  :KEYWORD=>[:state, 28],
  :REGEX=>[:state, 29],
  :interpolation=>[:state, 30],
  :PLUS=>[:state, 31],
  :MINUS=>[:state, 32],
  :object=>[:state, 33],
  :array=>[:state, 34],
  :function=>[:state, 35],
  :PREUNOP=>[:state, 36],
  :UNOP=>[:state, 37],
  :HEREDOC_REF=>[:state, 38],
  :IHEREDOC_REF=>[:state, 39],
  :LPAREN=>[:state, 40],
  :heredoc=>[:state, 41],
  :vvexpression=>[:state, 14],
  :"interpolation.string"=>[:state, 43],
  :"interpolation.heredoc"=>[:state, 44],
  :LBRACE=>[:state, 45],
  :LBRACK=>[:state, 46],
  :ARROW=>[:state, 47],
  :HEREDOC=>[:state, 48],
  :IHEREDOC=>[:state, 49],
  :IDENTIFIER=>[:state, 42],
  :ISTRING_BEGIN=>[:state, 50],
  :IHEREDOC_BEGIN=>[:state, 51]},
 {:vexpression=>[:state, 88],
  :NUMBER=>[:state, 25],
  :ISTRING=>[:state, 26],
  :SSTRING=>[:state, 27],
  :KEYWORD=>[:state, 28],
  :REGEX=>[:state, 29],
  :interpolation=>[:state, 30],
  :PLUS=>[:state, 31],
  :MINUS=>[:state, 32],
  :object=>[:state, 33],
  :array=>[:state, 34],
  :function=>[:state, 35],
  :PREUNOP=>[:state, 36],
  :UNOP=>[:state, 37],
  :HEREDOC_REF=>[:state, 38],
  :IHEREDOC_REF=>[:state, 39],
  :LPAREN=>[:state, 40],
  :heredoc=>[:state, 41],
  :vvexpression=>[:state, 14],
  :"interpolation.string"=>[:state, 43],
  :"interpolation.heredoc"=>[:state, 44],
  :LBRACE=>[:state, 45],
  :LBRACK=>[:state, 46],
  :ARROW=>[:state, 47],
  :HEREDOC=>[:state, 48],
  :IHEREDOC=>[:state, 49],
  :IDENTIFIER=>[:state, 42],
  :ISTRING_BEGIN=>[:state, 50],
  :IHEREDOC_BEGIN=>[:state, 51]},
 {:vexpression=>[:state, 89],
  :NUMBER=>[:state, 25],
  :ISTRING=>[:state, 26],
  :SSTRING=>[:state, 27],
  :KEYWORD=>[:state, 28],
  :REGEX=>[:state, 29],
  :interpolation=>[:state, 30],
  :PLUS=>[:state, 31],
  :MINUS=>[:state, 32],
  :object=>[:state, 33],
  :array=>[:state, 34],
  :function=>[:state, 35],
  :PREUNOP=>[:state, 36],
  :UNOP=>[:state, 37],
  :HEREDOC_REF=>[:state, 38],
  :IHEREDOC_REF=>[:state, 39],
  :LPAREN=>[:state, 40],
  :heredoc=>[:state, 41],
  :vvexpression=>[:state, 14],
  :"interpolation.string"=>[:state, 43],
  :"interpolation.heredoc"=>[:state, 44],
  :LBRACE=>[:state, 45],
  :LBRACK=>[:state, 46],
  :ARROW=>[:state, 47],
  :HEREDOC=>[:state, 48],
  :IHEREDOC=>[:state, 49],
  :IDENTIFIER=>[:state, 42],
  :ISTRING_BEGIN=>[:state, 50],
  :IHEREDOC_BEGIN=>[:state, 51]},
 {:vexpression=>[:state, 90],
  :NUMBER=>[:state, 25],
  :ISTRING=>[:state, 26],
  :SSTRING=>[:state, 27],
  :KEYWORD=>[:state, 28],
  :REGEX=>[:state, 29],
  :interpolation=>[:state, 30],
  :PLUS=>[:state, 31],
  :MINUS=>[:state, 32],
  :object=>[:state, 33],
  :array=>[:state, 34],
  :function=>[:state, 35],
  :PREUNOP=>[:state, 36],
  :UNOP=>[:state, 37],
  :HEREDOC_REF=>[:state, 38],
  :IHEREDOC_REF=>[:state, 39],
  :LPAREN=>[:state, 40],
  :heredoc=>[:state, 41],
  :vvexpression=>[:state, 14],
  :"interpolation.string"=>[:state, 43],
  :"interpolation.heredoc"=>[:state, 44],
  :LBRACE=>[:state, 45],
  :LBRACK=>[:state, 46],
  :ARROW=>[:state, 47],
  :HEREDOC=>[:state, 48],
  :IHEREDOC=>[:state, 49],
  :IDENTIFIER=>[:state, 42],
  :ISTRING_BEGIN=>[:state, 50],
  :IHEREDOC_BEGIN=>[:state, 51]},
 {:vexpression=>[:state, 91],
  :NUMBER=>[:state, 25],
  :ISTRING=>[:state, 26],
  :SSTRING=>[:state, 27],
  :KEYWORD=>[:state, 28],
  :REGEX=>[:state, 29],
  :interpolation=>[:state, 30],
  :PLUS=>[:state, 31],
  :MINUS=>[:state, 32],
  :object=>[:state, 33],
  :array=>[:state, 34],
  :function=>[:state, 35],
  :PREUNOP=>[:state, 36],
  :UNOP=>[:state, 37],
  :HEREDOC_REF=>[:state, 38],
  :IHEREDOC_REF=>[:state, 39],
  :LPAREN=>[:state, 40],
  :heredoc=>[:state, 41],
  :vvexpression=>[:state, 14],
  :"interpolation.string"=>[:state, 43],
  :"interpolation.heredoc"=>[:state, 44],
  :LBRACE=>[:state, 45],
  :LBRACK=>[:state, 46],
  :ARROW=>[:state, 47],
  :HEREDOC=>[:state, 48],
  :IHEREDOC=>[:state, 49],
  :IDENTIFIER=>[:state, 42],
  :ISTRING_BEGIN=>[:state, 50],
  :IHEREDOC_BEGIN=>[:state, 51]},
 {:$default=>[:reduce, 42]},
 {:IDENTIFIER=>[:state, 92]},
 {:vexpression=>[:state, 93],
  :NUMBER=>[:state, 25],
  :ISTRING=>[:state, 26],
  :SSTRING=>[:state, 27],
  :KEYWORD=>[:state, 28],
  :REGEX=>[:state, 29],
  :interpolation=>[:state, 30],
  :PLUS=>[:state, 31],
  :MINUS=>[:state, 32],
  :object=>[:state, 33],
  :array=>[:state, 34],
  :function=>[:state, 35],
  :PREUNOP=>[:state, 36],
  :UNOP=>[:state, 37],
  :HEREDOC_REF=>[:state, 38],
  :IHEREDOC_REF=>[:state, 39],
  :LPAREN=>[:state, 40],
  :heredoc=>[:state, 41],
  :vvexpression=>[:state, 14],
  :"interpolation.string"=>[:state, 43],
  :"interpolation.heredoc"=>[:state, 44],
  :LBRACE=>[:state, 45],
  :LBRACK=>[:state, 46],
  :ARROW=>[:state, 47],
  :HEREDOC=>[:state, 48],
  :IHEREDOC=>[:state, 49],
  :IDENTIFIER=>[:state, 42],
  :ISTRING_BEGIN=>[:state, 50],
  :IHEREDOC_BEGIN=>[:state, 51]},
 {:vexpression=>[:state, 94],
  :NUMBER=>[:state, 25],
  :ISTRING=>[:state, 26],
  :SSTRING=>[:state, 27],
  :KEYWORD=>[:state, 28],
  :REGEX=>[:state, 29],
  :interpolation=>[:state, 30],
  :PLUS=>[:state, 31],
  :MINUS=>[:state, 32],
  :object=>[:state, 33],
  :array=>[:state, 34],
  :function=>[:state, 35],
  :PREUNOP=>[:state, 36],
  :UNOP=>[:state, 37],
  :HEREDOC_REF=>[:state, 38],
  :IHEREDOC_REF=>[:state, 39],
  :LPAREN=>[:state, 40],
  :heredoc=>[:state, 41],
  :vvexpression=>[:state, 14],
  :"interpolation.string"=>[:state, 43],
  :"interpolation.heredoc"=>[:state, 44],
  :LBRACE=>[:state, 45],
  :LBRACK=>[:state, 46],
  :ARROW=>[:state, 47],
  :HEREDOC=>[:state, 48],
  :IHEREDOC=>[:state, 49],
  :IDENTIFIER=>[:state, 42],
  :ISTRING_BEGIN=>[:state, 50],
  :IHEREDOC_BEGIN=>[:state, 51]},
 {:vexpression=>[:state, 95],
  :NUMBER=>[:state, 25],
  :ISTRING=>[:state, 26],
  :SSTRING=>[:state, 27],
  :KEYWORD=>[:state, 28],
  :REGEX=>[:state, 29],
  :interpolation=>[:state, 30],
  :PLUS=>[:state, 31],
  :MINUS=>[:state, 32],
  :object=>[:state, 33],
  :array=>[:state, 34],
  :function=>[:state, 35],
  :PREUNOP=>[:state, 36],
  :UNOP=>[:state, 37],
  :HEREDOC_REF=>[:state, 38],
  :IHEREDOC_REF=>[:state, 39],
  :LPAREN=>[:state, 40],
  :heredoc=>[:state, 41],
  :vvexpression=>[:state, 14],
  :"interpolation.string"=>[:state, 43],
  :"interpolation.heredoc"=>[:state, 44],
  :LBRACE=>[:state, 45],
  :LBRACK=>[:state, 46],
  :ARROW=>[:state, 47],
  :HEREDOC=>[:state, 48],
  :IHEREDOC=>[:state, 49],
  :IDENTIFIER=>[:state, 42],
  :ISTRING_BEGIN=>[:state, 50],
  :IHEREDOC_BEGIN=>[:state, 51]},
 {:vexpression=>[:state, 96],
  :NUMBER=>[:state, 25],
  :ISTRING=>[:state, 26],
  :SSTRING=>[:state, 27],
  :KEYWORD=>[:state, 28],
  :REGEX=>[:state, 29],
  :interpolation=>[:state, 30],
  :PLUS=>[:state, 31],
  :MINUS=>[:state, 32],
  :object=>[:state, 33],
  :array=>[:state, 34],
  :function=>[:state, 35],
  :PREUNOP=>[:state, 36],
  :UNOP=>[:state, 37],
  :HEREDOC_REF=>[:state, 38],
  :IHEREDOC_REF=>[:state, 39],
  :LPAREN=>[:state, 40],
  :heredoc=>[:state, 41],
  :vvexpression=>[:state, 14],
  :"interpolation.string"=>[:state, 43],
  :"interpolation.heredoc"=>[:state, 44],
  :LBRACE=>[:state, 45],
  :LBRACK=>[:state, 46],
  :ARROW=>[:state, 47],
  :HEREDOC=>[:state, 48],
  :IHEREDOC=>[:state, 49],
  :IDENTIFIER=>[:state, 42],
  :ISTRING_BEGIN=>[:state, 50],
  :IHEREDOC_BEGIN=>[:state, 51]},
 {:LBRACE=>[:state, 97]},
 {:LBRACE=>[:state, 98]},
 {:vexpression=>[:state, 99],
  :NUMBER=>[:state, 25],
  :ISTRING=>[:state, 26],
  :SSTRING=>[:state, 27],
  :KEYWORD=>[:state, 28],
  :REGEX=>[:state, 29],
  :interpolation=>[:state, 30],
  :PLUS=>[:state, 31],
  :MINUS=>[:state, 32],
  :object=>[:state, 33],
  :array=>[:state, 34],
  :function=>[:state, 35],
  :PREUNOP=>[:state, 36],
  :UNOP=>[:state, 37],
  :HEREDOC_REF=>[:state, 38],
  :IHEREDOC_REF=>[:state, 39],
  :LPAREN=>[:state, 40],
  :heredoc=>[:state, 41],
  :vvexpression=>[:state, 14],
  :"interpolation.string"=>[:state, 43],
  :"interpolation.heredoc"=>[:state, 44],
  :LBRACE=>[:state, 45],
  :LBRACK=>[:state, 46],
  :ARROW=>[:state, 47],
  :HEREDOC=>[:state, 48],
  :IHEREDOC=>[:state, 49],
  :IDENTIFIER=>[:state, 42],
  :ISTRING_BEGIN=>[:state, 50],
  :IHEREDOC_BEGIN=>[:state, 51]},
 {:IDENTIFIER=>[:state, 100],
  :vexpression=>[:state, 101],
  :NUMBER=>[:state, 25],
  :ISTRING=>[:state, 26],
  :SSTRING=>[:state, 27],
  :KEYWORD=>[:state, 28],
  :REGEX=>[:state, 29],
  :interpolation=>[:state, 30],
  :PLUS=>[:state, 31],
  :MINUS=>[:state, 32],
  :object=>[:state, 33],
  :array=>[:state, 34],
  :function=>[:state, 35],
  :PREUNOP=>[:state, 36],
  :UNOP=>[:state, 37],
  :HEREDOC_REF=>[:state, 38],
  :IHEREDOC_REF=>[:state, 39],
  :LPAREN=>[:state, 40],
  :heredoc=>[:state, 41],
  :vvexpression=>[:state, 14],
  :"interpolation.string"=>[:state, 43],
  :"interpolation.heredoc"=>[:state, 44],
  :LBRACE=>[:state, 45],
  :LBRACK=>[:state, 46],
  :ARROW=>[:state, 47],
  :HEREDOC=>[:state, 48],
  :IHEREDOC=>[:state, 49],
  :ISTRING_BEGIN=>[:state, 50],
  :IHEREDOC_BEGIN=>[:state, 51]},
 {:LPAREN=>[:state, 54],
  :RANGE=>[:state, 55],
  :ERANGE=>[:state, 56],
  :BINOP=>[:state, 57],
  :MINUS=>[:state, 58],
  :PLUS=>[:state, 59],
  :UNOP=>[:state, 60],
  :PROP=>[:state, 61],
  :LBRACK=>[:state, 62],
  :$end=>[:reduce, 94],
  :IF=>[:reduce, 94],
  :UNLESS=>[:reduce, 94],
  :CLASS=>[:reduce, 94],
  :MODULE=>[:reduce, 94],
  :WHILE=>[:reduce, 94],
  :FOR=>[:reduce, 94],
  :RETURN=>[:reduce, 94],
  :ACTION=>[:reduce, 94],
  :TRY=>[:reduce, 94],
  :COLON=>[:reduce, 94],
  :NUMBER=>[:reduce, 94],
  :ISTRING=>[:reduce, 94],
  :SSTRING=>[:reduce, 94],
  :KEYWORD=>[:reduce, 94],
  :REGEX=>[:reduce, 94],
  :ISTRING_BEGIN=>[:reduce, 94],
  :IHEREDOC_BEGIN=>[:reduce, 94],
  :LBRACE=>[:reduce, 94],
  :ARROW=>[:reduce, 94],
  :PREUNOP=>[:reduce, 94],
  :HEREDOC_REF=>[:reduce, 94],
  :IHEREDOC_REF=>[:reduce, 94],
  :HEREDOC=>[:reduce, 94],
  :IHEREDOC=>[:reduce, 94],
  :IDENTIFIER=>[:reduce, 94],
  :NEWLINE=>[:reduce, 94],
  :RBRACE=>[:reduce, 94],
  :RBRACK=>[:reduce, 94]},
 {:"expressions.maybe"=>[:state, 102],
  :expressions=>[:state, 3],
  :expression=>[:state, 4],
  :conditional=>[:state, 5],
  :class=>[:state, 6],
  :module=>[:state, 7],
  :loop=>[:state, 8],
  :action=>[:state, 9],
  :exception=>[:state, 10],
  :directive=>[:state, 11],
  :vexpression=>[:state, 12],
  :NEWLINE=>[:state, 13],
  :vvexpression=>[:state, 14],
  :IF=>[:state, 15],
  :UNLESS=>[:state, 16],
  :CLASS=>[:state, 17],
  :MODULE=>[:state, 18],
  :WHILE=>[:state, 19],
  :FOR=>[:state, 20],
  :RETURN=>[:state, 21],
  :ACTION=>[:state, 22],
  :TRY=>[:state, 23],
  :COLON=>[:state, 24],
  :NUMBER=>[:state, 25],
  :ISTRING=>[:state, 26],
  :SSTRING=>[:state, 27],
  :KEYWORD=>[:state, 28],
  :REGEX=>[:state, 29],
  :interpolation=>[:state, 30],
  :PLUS=>[:state, 31],
  :MINUS=>[:state, 32],
  :object=>[:state, 33],
  :array=>[:state, 34],
  :function=>[:state, 35],
  :PREUNOP=>[:state, 36],
  :UNOP=>[:state, 37],
  :HEREDOC_REF=>[:state, 38],
  :IHEREDOC_REF=>[:state, 39],
  :LPAREN=>[:state, 40],
  :heredoc=>[:state, 41],
  :IDENTIFIER=>[:state, 42],
  :"interpolation.string"=>[:state, 43],
  :"interpolation.heredoc"=>[:state, 44],
  :LBRACE=>[:state, 45],
  :LBRACK=>[:state, 46],
  :ARROW=>[:state, 47],
  :HEREDOC=>[:state, 48],
  :IHEREDOC=>[:state, 49],
  :ISTRING_BEGIN=>[:state, 50],
  :IHEREDOC_BEGIN=>[:state, 51],
  :RBRACE=>[:reduce, 3]},
 {:expressions=>[:state, 103],
  :expression=>[:state, 4],
  :conditional=>[:state, 5],
  :class=>[:state, 6],
  :module=>[:state, 7],
  :loop=>[:state, 8],
  :action=>[:state, 9],
  :exception=>[:state, 10],
  :directive=>[:state, 11],
  :vexpression=>[:state, 12],
  :NEWLINE=>[:state, 13],
  :vvexpression=>[:state, 14],
  :IF=>[:state, 15],
  :UNLESS=>[:state, 16],
  :CLASS=>[:state, 17],
  :MODULE=>[:state, 18],
  :WHILE=>[:state, 19],
  :FOR=>[:state, 20],
  :RETURN=>[:state, 21],
  :ACTION=>[:state, 22],
  :TRY=>[:state, 23],
  :COLON=>[:state, 24],
  :NUMBER=>[:state, 25],
  :ISTRING=>[:state, 26],
  :SSTRING=>[:state, 27],
  :KEYWORD=>[:state, 28],
  :REGEX=>[:state, 29],
  :interpolation=>[:state, 30],
  :PLUS=>[:state, 31],
  :MINUS=>[:state, 32],
  :object=>[:state, 33],
  :array=>[:state, 34],
  :function=>[:state, 35],
  :PREUNOP=>[:state, 36],
  :UNOP=>[:state, 37],
  :HEREDOC_REF=>[:state, 38],
  :IHEREDOC_REF=>[:state, 39],
  :LPAREN=>[:state, 40],
  :heredoc=>[:state, 41],
  :IDENTIFIER=>[:state, 42],
  :"interpolation.string"=>[:state, 43],
  :"interpolation.heredoc"=>[:state, 44],
  :LBRACE=>[:state, 45],
  :LBRACK=>[:state, 46],
  :ARROW=>[:state, 47],
  :HEREDOC=>[:state, 48],
  :IHEREDOC=>[:state, 49],
  :ISTRING_BEGIN=>[:state, 50],
  :IHEREDOC_BEGIN=>[:state, 51]},
 {:LPAREN=>[:state, 54],
  :RANGE=>[:state, 55],
  :ERANGE=>[:state, 56],
  :BINOP=>[:reduce, 25],
  :MINUS=>[:reduce, 25],
  :PLUS=>[:reduce, 25],
  :UNOP=>[:state, 60],
  :PROP=>[:state, 61],
  :LBRACK=>[:state, 62],
  :$end=>[:reduce, 25],
  :IF=>[:reduce, 25],
  :UNLESS=>[:reduce, 25],
  :CLASS=>[:reduce, 25],
  :MODULE=>[:reduce, 25],
  :WHILE=>[:reduce, 25],
  :FOR=>[:reduce, 25],
  :RETURN=>[:reduce, 25],
  :ACTION=>[:reduce, 25],
  :TRY=>[:reduce, 25],
  :COLON=>[:reduce, 25],
  :NUMBER=>[:reduce, 25],
  :ISTRING=>[:reduce, 25],
  :SSTRING=>[:reduce, 25],
  :KEYWORD=>[:reduce, 25],
  :REGEX=>[:reduce, 25],
  :ISTRING_BEGIN=>[:reduce, 25],
  :IHEREDOC_BEGIN=>[:reduce, 25],
  :LBRACE=>[:reduce, 25],
  :ARROW=>[:reduce, 25],
  :PREUNOP=>[:reduce, 25],
  :HEREDOC_REF=>[:reduce, 25],
  :IHEREDOC_REF=>[:reduce, 25],
  :HEREDOC=>[:reduce, 25],
  :IHEREDOC=>[:reduce, 25],
  :IDENTIFIER=>[:reduce, 25],
  :NEWLINE=>[:reduce, 25],
  :RBRACE=>[:reduce, 25],
  :RBRACK=>[:reduce, 25],
  :RPAREN=>[:reduce, 25],
  :COMMA=>[:reduce, 25]},
 {:LPAREN=>[:state, 54],
  :RANGE=>[:state, 55],
  :ERANGE=>[:state, 56],
  :BINOP=>[:reduce, 26],
  :MINUS=>[:reduce, 26],
  :PLUS=>[:reduce, 26],
  :UNOP=>[:state, 60],
  :PROP=>[:state, 61],
  :LBRACK=>[:state, 62],
  :$end=>[:reduce, 26],
  :IF=>[:reduce, 26],
  :UNLESS=>[:reduce, 26],
  :CLASS=>[:reduce, 26],
  :MODULE=>[:reduce, 26],
  :WHILE=>[:reduce, 26],
  :FOR=>[:reduce, 26],
  :RETURN=>[:reduce, 26],
  :ACTION=>[:reduce, 26],
  :TRY=>[:reduce, 26],
  :COLON=>[:reduce, 26],
  :NUMBER=>[:reduce, 26],
  :ISTRING=>[:reduce, 26],
  :SSTRING=>[:reduce, 26],
  :KEYWORD=>[:reduce, 26],
  :REGEX=>[:reduce, 26],
  :ISTRING_BEGIN=>[:reduce, 26],
  :IHEREDOC_BEGIN=>[:reduce, 26],
  :LBRACE=>[:reduce, 26],
  :ARROW=>[:reduce, 26],
  :PREUNOP=>[:reduce, 26],
  :HEREDOC_REF=>[:reduce, 26],
  :IHEREDOC_REF=>[:reduce, 26],
  :HEREDOC=>[:reduce, 26],
  :IHEREDOC=>[:reduce, 26],
  :IDENTIFIER=>[:reduce, 26],
  :NEWLINE=>[:reduce, 26],
  :RBRACE=>[:reduce, 26],
  :RBRACK=>[:reduce, 26],
  :RPAREN=>[:reduce, 26],
  :COMMA=>[:reduce, 26]},
 {:LPAREN=>[:state, 54],
  :RANGE=>[:state, 55],
  :ERANGE=>[:state, 56],
  :BINOP=>[:state, 57],
  :MINUS=>[:state, 58],
  :PLUS=>[:state, 59],
  :UNOP=>[:state, 60],
  :PROP=>[:state, 61],
  :LBRACK=>[:state, 62],
  :$end=>[:reduce, 30],
  :IF=>[:reduce, 30],
  :UNLESS=>[:reduce, 30],
  :CLASS=>[:reduce, 30],
  :MODULE=>[:reduce, 30],
  :WHILE=>[:reduce, 30],
  :FOR=>[:reduce, 30],
  :RETURN=>[:reduce, 30],
  :ACTION=>[:reduce, 30],
  :TRY=>[:reduce, 30],
  :COLON=>[:reduce, 30],
  :NUMBER=>[:reduce, 30],
  :ISTRING=>[:reduce, 30],
  :SSTRING=>[:reduce, 30],
  :KEYWORD=>[:reduce, 30],
  :REGEX=>[:reduce, 30],
  :ISTRING_BEGIN=>[:reduce, 30],
  :IHEREDOC_BEGIN=>[:reduce, 30],
  :LBRACE=>[:reduce, 30],
  :ARROW=>[:reduce, 30],
  :PREUNOP=>[:reduce, 30],
  :HEREDOC_REF=>[:reduce, 30],
  :IHEREDOC_REF=>[:reduce, 30],
  :HEREDOC=>[:reduce, 30],
  :IHEREDOC=>[:reduce, 30],
  :IDENTIFIER=>[:reduce, 30],
  :NEWLINE=>[:reduce, 30],
  :RBRACE=>[:reduce, 30],
  :RBRACK=>[:reduce, 30],
  :RPAREN=>[:reduce, 30],
  :COMMA=>[:reduce, 30]},
 {:LPAREN=>[:state, 54],
  :RANGE=>[:reduce, 31],
  :ERANGE=>[:reduce, 31],
  :BINOP=>[:reduce, 31],
  :MINUS=>[:reduce, 31],
  :PLUS=>[:reduce, 31],
  :UNOP=>[:state, 60],
  :PROP=>[:state, 61],
  :LBRACK=>[:state, 62],
  :$end=>[:reduce, 31],
  :IF=>[:reduce, 31],
  :UNLESS=>[:reduce, 31],
  :CLASS=>[:reduce, 31],
  :MODULE=>[:reduce, 31],
  :WHILE=>[:reduce, 31],
  :FOR=>[:reduce, 31],
  :RETURN=>[:reduce, 31],
  :ACTION=>[:reduce, 31],
  :TRY=>[:reduce, 31],
  :COLON=>[:reduce, 31],
  :NUMBER=>[:reduce, 31],
  :ISTRING=>[:reduce, 31],
  :SSTRING=>[:reduce, 31],
  :KEYWORD=>[:reduce, 31],
  :REGEX=>[:reduce, 31],
  :ISTRING_BEGIN=>[:reduce, 31],
  :IHEREDOC_BEGIN=>[:reduce, 31],
  :LBRACE=>[:reduce, 31],
  :ARROW=>[:reduce, 31],
  :PREUNOP=>[:reduce, 31],
  :HEREDOC_REF=>[:reduce, 31],
  :IHEREDOC_REF=>[:reduce, 31],
  :HEREDOC=>[:reduce, 31],
  :IHEREDOC=>[:reduce, 31],
  :IDENTIFIER=>[:reduce, 31],
  :NEWLINE=>[:reduce, 31],
  :RBRACE=>[:reduce, 31],
  :RBRACK=>[:reduce, 31],
  :RPAREN=>[:reduce, 31],
  :COMMA=>[:reduce, 31]},
 {:RPAREN=>[:state, 104],
  :LPAREN=>[:state, 54],
  :RANGE=>[:state, 55],
  :ERANGE=>[:state, 56],
  :BINOP=>[:state, 57],
  :MINUS=>[:state, 58],
  :PLUS=>[:state, 59],
  :UNOP=>[:state, 60],
  :PROP=>[:state, 61],
  :LBRACK=>[:state, 62]},
 {:$default=>[:reduce, 51]},
 {:$default=>[:reduce, 52]},
 {:block=>[:state, 105], :LBRACE=>[:state, 106]},
 {:"function.arguments.body.maybe"=>[:state, 107],
  :"function.arguments.body"=>[:state, 108],
  :IDENTIFIER=>[:state, 109],
  :RPAREN=>[:reduce, 59]},
 {:"interpolation.string.finish"=>[:state, 110],
  :LPAREN=>[:state, 54],
  :RANGE=>[:state, 55],
  :ERANGE=>[:state, 56],
  :BINOP=>[:state, 57],
  :MINUS=>[:state, 58],
  :PLUS=>[:state, 59],
  :UNOP=>[:state, 60],
  :PROP=>[:state, 61],
  :LBRACK=>[:state, 62],
  :"interpolation.string"=>[:state, 111],
  :ISTRING=>[:state, 112],
  :ISTRING_BEGIN=>[:state, 50]},
 {:"interpolation.heredoc.finish"=>[:state, 113],
  :LPAREN=>[:state, 54],
  :RANGE=>[:state, 55],
  :ERANGE=>[:state, 56],
  :BINOP=>[:state, 57],
  :MINUS=>[:state, 58],
  :PLUS=>[:state, 59],
  :UNOP=>[:state, 60],
  :PROP=>[:state, 61],
  :LBRACK=>[:state, 62],
  :"interpolation.heredoc"=>[:state, 114],
  :IHEREDOC=>[:state, 115],
  :IHEREDOC_BEGIN=>[:state, 51]},
 {:RPAREN=>[:state, 116]},
 {:COMMA=>[:state, 117], :RPAREN=>[:reduce, 47]},
 {:LPAREN=>[:state, 54],
  :RANGE=>[:state, 55],
  :ERANGE=>[:state, 56],
  :BINOP=>[:state, 57],
  :MINUS=>[:state, 58],
  :PLUS=>[:state, 59],
  :UNOP=>[:state, 60],
  :PROP=>[:state, 61],
  :LBRACK=>[:state, 62],
  :RPAREN=>[:reduce, 50],
  :COMMA=>[:reduce, 50]},
 {:LPAREN=>[:state, 54],
  :RANGE=>[:reduce, 37],
  :ERANGE=>[:reduce, 37],
  :BINOP=>[:reduce, 37],
  :MINUS=>[:reduce, 37],
  :PLUS=>[:reduce, 37],
  :UNOP=>[:state, 60],
  :PROP=>[:state, 61],
  :LBRACK=>[:state, 62],
  :$end=>[:reduce, 37],
  :IF=>[:reduce, 37],
  :UNLESS=>[:reduce, 37],
  :CLASS=>[:reduce, 37],
  :MODULE=>[:reduce, 37],
  :WHILE=>[:reduce, 37],
  :FOR=>[:reduce, 37],
  :RETURN=>[:reduce, 37],
  :ACTION=>[:reduce, 37],
  :TRY=>[:reduce, 37],
  :COLON=>[:reduce, 37],
  :NUMBER=>[:reduce, 37],
  :ISTRING=>[:reduce, 37],
  :SSTRING=>[:reduce, 37],
  :KEYWORD=>[:reduce, 37],
  :REGEX=>[:reduce, 37],
  :ISTRING_BEGIN=>[:reduce, 37],
  :IHEREDOC_BEGIN=>[:reduce, 37],
  :LBRACE=>[:reduce, 37],
  :ARROW=>[:reduce, 37],
  :PREUNOP=>[:reduce, 37],
  :HEREDOC_REF=>[:reduce, 37],
  :IHEREDOC_REF=>[:reduce, 37],
  :HEREDOC=>[:reduce, 37],
  :IHEREDOC=>[:reduce, 37],
  :IDENTIFIER=>[:reduce, 37],
  :NEWLINE=>[:reduce, 37],
  :RBRACE=>[:reduce, 37],
  :RBRACK=>[:reduce, 37],
  :RPAREN=>[:reduce, 37],
  :COMMA=>[:reduce, 37]},
 {:LPAREN=>[:state, 54],
  :RANGE=>[:reduce, 38],
  :ERANGE=>[:reduce, 38],
  :BINOP=>[:reduce, 38],
  :MINUS=>[:reduce, 38],
  :PLUS=>[:reduce, 38],
  :UNOP=>[:state, 60],
  :PROP=>[:state, 61],
  :LBRACK=>[:state, 62],
  :$end=>[:reduce, 38],
  :IF=>[:reduce, 38],
  :UNLESS=>[:reduce, 38],
  :CLASS=>[:reduce, 38],
  :MODULE=>[:reduce, 38],
  :WHILE=>[:reduce, 38],
  :FOR=>[:reduce, 38],
  :RETURN=>[:reduce, 38],
  :ACTION=>[:reduce, 38],
  :TRY=>[:reduce, 38],
  :COLON=>[:reduce, 38],
  :NUMBER=>[:reduce, 38],
  :ISTRING=>[:reduce, 38],
  :SSTRING=>[:reduce, 38],
  :KEYWORD=>[:reduce, 38],
  :REGEX=>[:reduce, 38],
  :ISTRING_BEGIN=>[:reduce, 38],
  :IHEREDOC_BEGIN=>[:reduce, 38],
  :LBRACE=>[:reduce, 38],
  :ARROW=>[:reduce, 38],
  :PREUNOP=>[:reduce, 38],
  :HEREDOC_REF=>[:reduce, 38],
  :IHEREDOC_REF=>[:reduce, 38],
  :HEREDOC=>[:reduce, 38],
  :IHEREDOC=>[:reduce, 38],
  :IDENTIFIER=>[:reduce, 38],
  :NEWLINE=>[:reduce, 38],
  :RBRACE=>[:reduce, 38],
  :RBRACK=>[:reduce, 38],
  :RPAREN=>[:reduce, 38],
  :COMMA=>[:reduce, 38]},
 {:LPAREN=>[:state, 54],
  :RANGE=>[:state, 55],
  :ERANGE=>[:state, 56],
  :BINOP=>[:reduce, 39],
  :MINUS=>[:reduce, 39],
  :PLUS=>[:reduce, 39],
  :UNOP=>[:state, 60],
  :PROP=>[:state, 61],
  :LBRACK=>[:state, 62],
  :$end=>[:reduce, 39],
  :IF=>[:reduce, 39],
  :UNLESS=>[:reduce, 39],
  :CLASS=>[:reduce, 39],
  :MODULE=>[:reduce, 39],
  :WHILE=>[:reduce, 39],
  :FOR=>[:reduce, 39],
  :RETURN=>[:reduce, 39],
  :ACTION=>[:reduce, 39],
  :TRY=>[:reduce, 39],
  :COLON=>[:reduce, 39],
  :NUMBER=>[:reduce, 39],
  :ISTRING=>[:reduce, 39],
  :SSTRING=>[:reduce, 39],
  :KEYWORD=>[:reduce, 39],
  :REGEX=>[:reduce, 39],
  :ISTRING_BEGIN=>[:reduce, 39],
  :IHEREDOC_BEGIN=>[:reduce, 39],
  :LBRACE=>[:reduce, 39],
  :ARROW=>[:reduce, 39],
  :PREUNOP=>[:reduce, 39],
  :HEREDOC_REF=>[:reduce, 39],
  :IHEREDOC_REF=>[:reduce, 39],
  :HEREDOC=>[:reduce, 39],
  :IHEREDOC=>[:reduce, 39],
  :IDENTIFIER=>[:reduce, 39],
  :NEWLINE=>[:reduce, 39],
  :RBRACE=>[:reduce, 39],
  :RBRACK=>[:reduce, 39],
  :RPAREN=>[:reduce, 39],
  :COMMA=>[:reduce, 39]},
 {:LPAREN=>[:state, 54],
  :RANGE=>[:state, 55],
  :ERANGE=>[:state, 56],
  :BINOP=>[:reduce, 40],
  :MINUS=>[:reduce, 40],
  :PLUS=>[:reduce, 40],
  :UNOP=>[:state, 60],
  :PROP=>[:state, 61],
  :LBRACK=>[:state, 62],
  :$end=>[:reduce, 40],
  :IF=>[:reduce, 40],
  :UNLESS=>[:reduce, 40],
  :CLASS=>[:reduce, 40],
  :MODULE=>[:reduce, 40],
  :WHILE=>[:reduce, 40],
  :FOR=>[:reduce, 40],
  :RETURN=>[:reduce, 40],
  :ACTION=>[:reduce, 40],
  :TRY=>[:reduce, 40],
  :COLON=>[:reduce, 40],
  :NUMBER=>[:reduce, 40],
  :ISTRING=>[:reduce, 40],
  :SSTRING=>[:reduce, 40],
  :KEYWORD=>[:reduce, 40],
  :REGEX=>[:reduce, 40],
  :ISTRING_BEGIN=>[:reduce, 40],
  :IHEREDOC_BEGIN=>[:reduce, 40],
  :LBRACE=>[:reduce, 40],
  :ARROW=>[:reduce, 40],
  :PREUNOP=>[:reduce, 40],
  :HEREDOC_REF=>[:reduce, 40],
  :IHEREDOC_REF=>[:reduce, 40],
  :HEREDOC=>[:reduce, 40],
  :IHEREDOC=>[:reduce, 40],
  :IDENTIFIER=>[:reduce, 40],
  :NEWLINE=>[:reduce, 40],
  :RBRACE=>[:reduce, 40],
  :RBRACK=>[:reduce, 40],
  :RPAREN=>[:reduce, 40],
  :COMMA=>[:reduce, 40]},
 {:LPAREN=>[:state, 54],
  :RANGE=>[:state, 55],
  :ERANGE=>[:state, 56],
  :BINOP=>[:reduce, 41],
  :MINUS=>[:reduce, 41],
  :PLUS=>[:reduce, 41],
  :UNOP=>[:state, 60],
  :PROP=>[:state, 61],
  :LBRACK=>[:state, 62],
  :$end=>[:reduce, 41],
  :IF=>[:reduce, 41],
  :UNLESS=>[:reduce, 41],
  :CLASS=>[:reduce, 41],
  :MODULE=>[:reduce, 41],
  :WHILE=>[:reduce, 41],
  :FOR=>[:reduce, 41],
  :RETURN=>[:reduce, 41],
  :ACTION=>[:reduce, 41],
  :TRY=>[:reduce, 41],
  :COLON=>[:reduce, 41],
  :NUMBER=>[:reduce, 41],
  :ISTRING=>[:reduce, 41],
  :SSTRING=>[:reduce, 41],
  :KEYWORD=>[:reduce, 41],
  :REGEX=>[:reduce, 41],
  :ISTRING_BEGIN=>[:reduce, 41],
  :IHEREDOC_BEGIN=>[:reduce, 41],
  :LBRACE=>[:reduce, 41],
  :ARROW=>[:reduce, 41],
  :PREUNOP=>[:reduce, 41],
  :HEREDOC_REF=>[:reduce, 41],
  :IHEREDOC_REF=>[:reduce, 41],
  :HEREDOC=>[:reduce, 41],
  :IHEREDOC=>[:reduce, 41],
  :IDENTIFIER=>[:reduce, 41],
  :NEWLINE=>[:reduce, 41],
  :RBRACE=>[:reduce, 41],
  :RBRACK=>[:reduce, 41],
  :RPAREN=>[:reduce, 41],
  :COMMA=>[:reduce, 41]},
 {:$default=>[:reduce, 44]},
 {:RBRACK=>[:state, 118],
  :LPAREN=>[:state, 54],
  :RANGE=>[:state, 55],
  :ERANGE=>[:state, 56],
  :BINOP=>[:state, 57],
  :MINUS=>[:state, 58],
  :PLUS=>[:state, 59],
  :UNOP=>[:state, 60],
  :PROP=>[:state, 61],
  :LBRACK=>[:state, 62]},
 {:LPAREN=>[:state, 54],
  :RANGE=>[:state, 55],
  :ERANGE=>[:state, 56],
  :BINOP=>[:state, 57],
  :MINUS=>[:state, 58],
  :PLUS=>[:state, 59],
  :UNOP=>[:state, 60],
  :PROP=>[:state, 61],
  :LBRACK=>[:state, 62],
  :$end=>[:reduce, 18],
  :IF=>[:reduce, 18],
  :UNLESS=>[:reduce, 18],
  :CLASS=>[:reduce, 18],
  :MODULE=>[:reduce, 18],
  :WHILE=>[:reduce, 18],
  :FOR=>[:reduce, 18],
  :RETURN=>[:reduce, 18],
  :ACTION=>[:reduce, 18],
  :TRY=>[:reduce, 18],
  :COLON=>[:reduce, 18],
  :NUMBER=>[:reduce, 18],
  :ISTRING=>[:reduce, 18],
  :SSTRING=>[:reduce, 18],
  :KEYWORD=>[:reduce, 18],
  :REGEX=>[:reduce, 18],
  :ISTRING_BEGIN=>[:reduce, 18],
  :IHEREDOC_BEGIN=>[:reduce, 18],
  :LBRACE=>[:reduce, 18],
  :ARROW=>[:reduce, 18],
  :PREUNOP=>[:reduce, 18],
  :HEREDOC_REF=>[:reduce, 18],
  :IHEREDOC_REF=>[:reduce, 18],
  :HEREDOC=>[:reduce, 18],
  :IHEREDOC=>[:reduce, 18],
  :IDENTIFIER=>[:reduce, 18],
  :NEWLINE=>[:reduce, 18],
  :RBRACE=>[:reduce, 18],
  :RBRACK=>[:reduce, 18]},
 {:RPAREN=>[:state, 119],
  :LPAREN=>[:state, 54],
  :RANGE=>[:state, 55],
  :ERANGE=>[:state, 56],
  :BINOP=>[:state, 57],
  :MINUS=>[:state, 58],
  :PLUS=>[:state, 59],
  :UNOP=>[:state, 60],
  :PROP=>[:state, 61],
  :LBRACK=>[:state, 62]},
 {:RPAREN=>[:state, 120],
  :LPAREN=>[:state, 54],
  :RANGE=>[:state, 55],
  :ERANGE=>[:state, 56],
  :BINOP=>[:state, 57],
  :MINUS=>[:state, 58],
  :PLUS=>[:state, 59],
  :UNOP=>[:state, 60],
  :PROP=>[:state, 61],
  :LBRACK=>[:state, 62]},
 {:"class.definition.parts.maybe"=>[:state, 121],
  :"class.definition.parts"=>[:state, 122],
  :"class.definition.part"=>[:state, 123],
  :IDENTIFIER=>[:state, 124],
  :module=>[:state, 125],
  :class=>[:state, 126],
  :MODULE=>[:state, 18],
  :CLASS=>[:state, 17],
  :RBRACE=>[:reduce, 79]},
 {:"module.definition.parts.maybe"=>[:state, 127],
  :"module.definition.parts"=>[:state, 128],
  :"module.definition.part"=>[:state, 129],
  :IDENTIFIER=>[:state, 130],
  :RBRACE=>[:reduce, 87]},
 {:RPAREN=>[:state, 131],
  :LPAREN=>[:state, 54],
  :RANGE=>[:state, 55],
  :ERANGE=>[:state, 56],
  :BINOP=>[:state, 57],
  :MINUS=>[:state, 58],
  :PLUS=>[:state, 59],
  :UNOP=>[:state, 60],
  :PROP=>[:state, 61],
  :LBRACK=>[:state, 62]},
 {:IN=>[:state, 132],
  :RPAREN=>[:reduce, 46],
  :LPAREN=>[:reduce, 46],
  :RANGE=>[:reduce, 46],
  :ERANGE=>[:reduce, 46],
  :BINOP=>[:reduce, 46],
  :MINUS=>[:reduce, 46],
  :PLUS=>[:reduce, 46],
  :UNOP=>[:reduce, 46],
  :PROP=>[:reduce, 46],
  :LBRACK=>[:reduce, 46]},
 {:RPAREN=>[:state, 133],
  :LPAREN=>[:state, 54],
  :RANGE=>[:state, 55],
  :ERANGE=>[:state, 56],
  :BINOP=>[:state, 57],
  :MINUS=>[:state, 58],
  :PLUS=>[:state, 59],
  :UNOP=>[:state, 60],
  :PROP=>[:state, 61],
  :LBRACK=>[:state, 62]},
 {:RBRACE=>[:state, 134]},
 {:RBRACK=>[:state, 135],
  :expression=>[:state, 53],
  :conditional=>[:state, 5],
  :class=>[:state, 6],
  :module=>[:state, 7],
  :loop=>[:state, 8],
  :action=>[:state, 9],
  :exception=>[:state, 10],
  :directive=>[:state, 11],
  :vexpression=>[:state, 12],
  :NEWLINE=>[:state, 13],
  :vvexpression=>[:state, 14],
  :IF=>[:state, 15],
  :UNLESS=>[:state, 16],
  :CLASS=>[:state, 17],
  :MODULE=>[:state, 18],
  :WHILE=>[:state, 19],
  :FOR=>[:state, 20],
  :RETURN=>[:state, 21],
  :ACTION=>[:state, 22],
  :TRY=>[:state, 23],
  :COLON=>[:state, 24],
  :NUMBER=>[:state, 25],
  :ISTRING=>[:state, 26],
  :SSTRING=>[:state, 27],
  :KEYWORD=>[:state, 28],
  :REGEX=>[:state, 29],
  :interpolation=>[:state, 30],
  :PLUS=>[:state, 31],
  :MINUS=>[:state, 32],
  :object=>[:state, 33],
  :array=>[:state, 34],
  :function=>[:state, 35],
  :PREUNOP=>[:state, 36],
  :UNOP=>[:state, 37],
  :HEREDOC_REF=>[:state, 38],
  :IHEREDOC_REF=>[:state, 39],
  :LPAREN=>[:state, 40],
  :heredoc=>[:state, 41],
  :IDENTIFIER=>[:state, 42],
  :"interpolation.string"=>[:state, 43],
  :"interpolation.heredoc"=>[:state, 44],
  :LBRACE=>[:state, 45],
  :LBRACK=>[:state, 46],
  :ARROW=>[:state, 47],
  :HEREDOC=>[:state, 48],
  :IHEREDOC=>[:state, 49],
  :ISTRING_BEGIN=>[:state, 50],
  :IHEREDOC_BEGIN=>[:state, 51]},
 {:$default=>[:reduce, 34]},
 {:$default=>[:reduce, 53]},
 {:"expressions.maybe"=>[:state, 136],
  :expressions=>[:state, 3],
  :expression=>[:state, 4],
  :conditional=>[:state, 5],
  :class=>[:state, 6],
  :module=>[:state, 7],
  :loop=>[:state, 8],
  :action=>[:state, 9],
  :exception=>[:state, 10],
  :directive=>[:state, 11],
  :vexpression=>[:state, 12],
  :NEWLINE=>[:state, 13],
  :vvexpression=>[:state, 14],
  :IF=>[:state, 15],
  :UNLESS=>[:state, 16],
  :CLASS=>[:state, 17],
  :MODULE=>[:state, 18],
  :WHILE=>[:state, 19],
  :FOR=>[:state, 20],
  :RETURN=>[:state, 21],
  :ACTION=>[:state, 22],
  :TRY=>[:state, 23],
  :COLON=>[:state, 24],
  :NUMBER=>[:state, 25],
  :ISTRING=>[:state, 26],
  :SSTRING=>[:state, 27],
  :KEYWORD=>[:state, 28],
  :REGEX=>[:state, 29],
  :interpolation=>[:state, 30],
  :PLUS=>[:state, 31],
  :MINUS=>[:state, 32],
  :object=>[:state, 33],
  :array=>[:state, 34],
  :function=>[:state, 35],
  :PREUNOP=>[:state, 36],
  :UNOP=>[:state, 37],
  :HEREDOC_REF=>[:state, 38],
  :IHEREDOC_REF=>[:state, 39],
  :LPAREN=>[:state, 40],
  :heredoc=>[:state, 41],
  :IDENTIFIER=>[:state, 42],
  :"interpolation.string"=>[:state, 43],
  :"interpolation.heredoc"=>[:state, 44],
  :LBRACE=>[:state, 45],
  :LBRACK=>[:state, 46],
  :ARROW=>[:state, 47],
  :HEREDOC=>[:state, 48],
  :IHEREDOC=>[:state, 49],
  :ISTRING_BEGIN=>[:state, 50],
  :IHEREDOC_BEGIN=>[:state, 51],
  :RBRACE=>[:reduce, 3]},
 {:RPAREN=>[:state, 137]},
 {:COMMA=>[:state, 138], :RPAREN=>[:reduce, 58]},
 {:RPAREN=>[:reduce, 61], :COMMA=>[:reduce, 61]},
 {:$default=>[:reduce, 67]},
 {:$default=>[:reduce, 68]},
 {:$default=>[:reduce, 69]},
 {:$default=>[:reduce, 64]},
 {:$default=>[:reduce, 65]},
 {:$default=>[:reduce, 66]},
 {:$default=>[:reduce, 36]},
 {:vexpression=>[:state, 139],
  :NUMBER=>[:state, 25],
  :ISTRING=>[:state, 26],
  :SSTRING=>[:state, 27],
  :KEYWORD=>[:state, 28],
  :REGEX=>[:state, 29],
  :interpolation=>[:state, 30],
  :PLUS=>[:state, 31],
  :MINUS=>[:state, 32],
  :object=>[:state, 33],
  :array=>[:state, 34],
  :function=>[:state, 35],
  :PREUNOP=>[:state, 36],
  :UNOP=>[:state, 37],
  :HEREDOC_REF=>[:state, 38],
  :IHEREDOC_REF=>[:state, 39],
  :LPAREN=>[:state, 40],
  :heredoc=>[:state, 41],
  :vvexpression=>[:state, 14],
  :"interpolation.string"=>[:state, 43],
  :"interpolation.heredoc"=>[:state, 44],
  :LBRACE=>[:state, 45],
  :LBRACK=>[:state, 46],
  :ARROW=>[:state, 47],
  :HEREDOC=>[:state, 48],
  :IHEREDOC=>[:state, 49],
  :IDENTIFIER=>[:state, 42],
  :ISTRING_BEGIN=>[:state, 50],
  :IHEREDOC_BEGIN=>[:state, 51]},
 {:$default=>[:reduce, 45]},
 {:block=>[:state, 140], :LBRACE=>[:state, 106]},
 {:block=>[:state, 141], :LBRACE=>[:state, 106]},
 {:RBRACE=>[:state, 142]},
 {:"class.definition.part"=>[:state, 143],
  :IDENTIFIER=>[:state, 124],
  :module=>[:state, 125],
  :class=>[:state, 126],
  :MODULE=>[:state, 18],
  :CLASS=>[:state, 17],
  :RBRACE=>[:reduce, 78]},
 {:RBRACE=>[:reduce, 81],
  :IDENTIFIER=>[:reduce, 81],
  :MODULE=>[:reduce, 81],
  :CLASS=>[:reduce, 81]},
 {:COLON=>[:state, 144], :PROP=>[:state, 145]},
 {:RBRACE=>[:reduce, 84],
  :IDENTIFIER=>[:reduce, 84],
  :MODULE=>[:reduce, 84],
  :CLASS=>[:reduce, 84]},
 {:RBRACE=>[:reduce, 85],
  :IDENTIFIER=>[:reduce, 85],
  :MODULE=>[:reduce, 85],
  :CLASS=>[:reduce, 85]},
 {:RBRACE=>[:state, 146]},
 {:"module.definition.part"=>[:state, 147],
  :IDENTIFIER=>[:state, 130],
  :RBRACE=>[:reduce, 86]},
 {:RBRACE=>[:reduce, 89], :IDENTIFIER=>[:reduce, 89]},
 {:COLON=>[:state, 148]},
 {:block=>[:state, 149], :LBRACE=>[:state, 106]},
 {:vexpression=>[:state, 150],
  :NUMBER=>[:state, 25],
  :ISTRING=>[:state, 26],
  :SSTRING=>[:state, 27],
  :KEYWORD=>[:state, 28],
  :REGEX=>[:state, 29],
  :interpolation=>[:state, 30],
  :PLUS=>[:state, 31],
  :MINUS=>[:state, 32],
  :object=>[:state, 33],
  :array=>[:state, 34],
  :function=>[:state, 35],
  :PREUNOP=>[:state, 36],
  :UNOP=>[:state, 37],
  :HEREDOC_REF=>[:state, 38],
  :IHEREDOC_REF=>[:state, 39],
  :LPAREN=>[:state, 40],
  :heredoc=>[:state, 41],
  :vvexpression=>[:state, 14],
  :"interpolation.string"=>[:state, 43],
  :"interpolation.heredoc"=>[:state, 44],
  :LBRACE=>[:state, 45],
  :LBRACK=>[:state, 46],
  :ARROW=>[:state, 47],
  :HEREDOC=>[:state, 48],
  :IHEREDOC=>[:state, 49],
  :IDENTIFIER=>[:state, 42],
  :ISTRING_BEGIN=>[:state, 50],
  :IHEREDOC_BEGIN=>[:state, 51]},
 {:block=>[:state, 151], :LBRACE=>[:state, 106]},
 {:"exception.catch.maybe"=>[:state, 152],
  :"exception.catch"=>[:state, 153],
  :CATCH=>[:state, 154],
  :FINALLY=>[:reduce, 98],
  :$end=>[:reduce, 98],
  :IF=>[:reduce, 98],
  :UNLESS=>[:reduce, 98],
  :CLASS=>[:reduce, 98],
  :MODULE=>[:reduce, 98],
  :WHILE=>[:reduce, 98],
  :FOR=>[:reduce, 98],
  :RETURN=>[:reduce, 98],
  :ACTION=>[:reduce, 98],
  :TRY=>[:reduce, 98],
  :COLON=>[:reduce, 98],
  :NUMBER=>[:reduce, 98],
  :ISTRING=>[:reduce, 98],
  :SSTRING=>[:reduce, 98],
  :KEYWORD=>[:reduce, 98],
  :REGEX=>[:reduce, 98],
  :ISTRING_BEGIN=>[:reduce, 98],
  :IHEREDOC_BEGIN=>[:reduce, 98],
  :PLUS=>[:reduce, 98],
  :MINUS=>[:reduce, 98],
  :LBRACE=>[:reduce, 98],
  :LBRACK=>[:reduce, 98],
  :ARROW=>[:reduce, 98],
  :PREUNOP=>[:reduce, 98],
  :UNOP=>[:reduce, 98],
  :HEREDOC_REF=>[:reduce, 98],
  :IHEREDOC_REF=>[:reduce, 98],
  :LPAREN=>[:reduce, 98],
  :HEREDOC=>[:reduce, 98],
  :IHEREDOC=>[:reduce, 98],
  :RANGE=>[:reduce, 98],
  :ERANGE=>[:reduce, 98],
  :BINOP=>[:reduce, 98],
  :PROP=>[:reduce, 98],
  :IDENTIFIER=>[:reduce, 98],
  :NEWLINE=>[:reduce, 98],
  :RBRACE=>[:reduce, 98],
  :RBRACK=>[:reduce, 98]},
 {:$default=>[:reduce, 106]},
 {:RBRACE=>[:state, 155]},
 {:LBRACE=>[:reduce, 56]},
 {:IDENTIFIER=>[:state, 156]},
 {:LPAREN=>[:state, 54],
  :RANGE=>[:state, 55],
  :ERANGE=>[:state, 56],
  :BINOP=>[:state, 57],
  :MINUS=>[:state, 58],
  :PLUS=>[:state, 59],
  :UNOP=>[:state, 60],
  :PROP=>[:state, 61],
  :LBRACK=>[:state, 62],
  :RPAREN=>[:reduce, 49],
  :COMMA=>[:reduce, 49]},
 {:"conditional.continue.maybe"=>[:state, 157],
  :"conditional.continue"=>[:state, 158],
  :ELSIF=>[:state, 159],
  :ELSE=>[:state, 160],
  :$end=>[:reduce, 73],
  :IF=>[:reduce, 73],
  :UNLESS=>[:reduce, 73],
  :CLASS=>[:reduce, 73],
  :MODULE=>[:reduce, 73],
  :WHILE=>[:reduce, 73],
  :FOR=>[:reduce, 73],
  :RETURN=>[:reduce, 73],
  :ACTION=>[:reduce, 73],
  :TRY=>[:reduce, 73],
  :COLON=>[:reduce, 73],
  :NUMBER=>[:reduce, 73],
  :ISTRING=>[:reduce, 73],
  :SSTRING=>[:reduce, 73],
  :KEYWORD=>[:reduce, 73],
  :REGEX=>[:reduce, 73],
  :ISTRING_BEGIN=>[:reduce, 73],
  :IHEREDOC_BEGIN=>[:reduce, 73],
  :PLUS=>[:reduce, 73],
  :MINUS=>[:reduce, 73],
  :LBRACE=>[:reduce, 73],
  :LBRACK=>[:reduce, 73],
  :ARROW=>[:reduce, 73],
  :PREUNOP=>[:reduce, 73],
  :UNOP=>[:reduce, 73],
  :HEREDOC_REF=>[:reduce, 73],
  :IHEREDOC_REF=>[:reduce, 73],
  :LPAREN=>[:reduce, 73],
  :HEREDOC=>[:reduce, 73],
  :IHEREDOC=>[:reduce, 73],
  :RANGE=>[:reduce, 73],
  :ERANGE=>[:reduce, 73],
  :BINOP=>[:reduce, 73],
  :PROP=>[:reduce, 73],
  :IDENTIFIER=>[:reduce, 73],
  :NEWLINE=>[:reduce, 73],
  :RBRACE=>[:reduce, 73],
  :RBRACK=>[:reduce, 73]},
 {:$default=>[:reduce, 71]},
 {:$default=>[:reduce, 76]},
 {:RBRACE=>[:reduce, 80],
  :IDENTIFIER=>[:reduce, 80],
  :MODULE=>[:reduce, 80],
  :CLASS=>[:reduce, 80]},
 {:vexpression=>[:state, 161],
  :NUMBER=>[:state, 25],
  :ISTRING=>[:state, 26],
  :SSTRING=>[:state, 27],
  :KEYWORD=>[:state, 28],
  :REGEX=>[:state, 29],
  :interpolation=>[:state, 30],
  :PLUS=>[:state, 31],
  :MINUS=>[:state, 32],
  :object=>[:state, 33],
  :array=>[:state, 34],
  :function=>[:state, 35],
  :PREUNOP=>[:state, 36],
  :UNOP=>[:state, 37],
  :HEREDOC_REF=>[:state, 38],
  :IHEREDOC_REF=>[:state, 39],
  :LPAREN=>[:state, 40],
  :heredoc=>[:state, 41],
  :vvexpression=>[:state, 14],
  :"interpolation.string"=>[:state, 43],
  :"interpolation.heredoc"=>[:state, 44],
  :LBRACE=>[:state, 45],
  :LBRACK=>[:state, 46],
  :ARROW=>[:state, 47],
  :HEREDOC=>[:state, 48],
  :IHEREDOC=>[:state, 49],
  :IDENTIFIER=>[:state, 42],
  :ISTRING_BEGIN=>[:state, 50],
  :IHEREDOC_BEGIN=>[:state, 51]},
 {:IDENTIFIER=>[:state, 162]},
 {:$default=>[:reduce, 77]},
 {:RBRACE=>[:reduce, 88], :IDENTIFIER=>[:reduce, 88]},
 {:vexpression=>[:state, 163],
  :NUMBER=>[:state, 25],
  :ISTRING=>[:state, 26],
  :SSTRING=>[:state, 27],
  :KEYWORD=>[:state, 28],
  :REGEX=>[:state, 29],
  :interpolation=>[:state, 30],
  :PLUS=>[:state, 31],
  :MINUS=>[:state, 32],
  :object=>[:state, 33],
  :array=>[:state, 34],
  :function=>[:state, 35],
  :PREUNOP=>[:state, 36],
  :UNOP=>[:state, 37],
  :HEREDOC_REF=>[:state, 38],
  :IHEREDOC_REF=>[:state, 39],
  :LPAREN=>[:state, 40],
  :heredoc=>[:state, 41],
  :vvexpression=>[:state, 14],
  :"interpolation.string"=>[:state, 43],
  :"interpolation.heredoc"=>[:state, 44],
  :LBRACE=>[:state, 45],
  :LBRACK=>[:state, 46],
  :ARROW=>[:state, 47],
  :HEREDOC=>[:state, 48],
  :IHEREDOC=>[:state, 49],
  :IDENTIFIER=>[:state, 42],
  :ISTRING_BEGIN=>[:state, 50],
  :IHEREDOC_BEGIN=>[:state, 51]},
 {:$default=>[:reduce, 91]},
 {:RPAREN=>[:state, 164],
  :LPAREN=>[:state, 54],
  :RANGE=>[:state, 55],
  :ERANGE=>[:state, 56],
  :BINOP=>[:state, 57],
  :MINUS=>[:state, 58],
  :PLUS=>[:state, 59],
  :UNOP=>[:state, 60],
  :PROP=>[:state, 61],
  :LBRACK=>[:state, 62]},
 {:$default=>[:reduce, 93]},
 {:"exception.finally.maybe"=>[:state, 165],
  :"exception.finally"=>[:state, 166],
  :FINALLY=>[:state, 167],
  :$end=>[:reduce, 100],
  :IF=>[:reduce, 100],
  :UNLESS=>[:reduce, 100],
  :CLASS=>[:reduce, 100],
  :MODULE=>[:reduce, 100],
  :WHILE=>[:reduce, 100],
  :FOR=>[:reduce, 100],
  :RETURN=>[:reduce, 100],
  :ACTION=>[:reduce, 100],
  :TRY=>[:reduce, 100],
  :COLON=>[:reduce, 100],
  :NUMBER=>[:reduce, 100],
  :ISTRING=>[:reduce, 100],
  :SSTRING=>[:reduce, 100],
  :KEYWORD=>[:reduce, 100],
  :REGEX=>[:reduce, 100],
  :ISTRING_BEGIN=>[:reduce, 100],
  :IHEREDOC_BEGIN=>[:reduce, 100],
  :PLUS=>[:reduce, 100],
  :MINUS=>[:reduce, 100],
  :LBRACE=>[:reduce, 100],
  :LBRACK=>[:reduce, 100],
  :ARROW=>[:reduce, 100],
  :PREUNOP=>[:reduce, 100],
  :UNOP=>[:reduce, 100],
  :HEREDOC_REF=>[:reduce, 100],
  :IHEREDOC_REF=>[:reduce, 100],
  :LPAREN=>[:reduce, 100],
  :HEREDOC=>[:reduce, 100],
  :IHEREDOC=>[:reduce, 100],
  :RANGE=>[:reduce, 100],
  :ERANGE=>[:reduce, 100],
  :BINOP=>[:reduce, 100],
  :PROP=>[:reduce, 100],
  :IDENTIFIER=>[:reduce, 100],
  :NEWLINE=>[:reduce, 100],
  :RBRACE=>[:reduce, 100],
  :RBRACK=>[:reduce, 100]},
 {:$default=>[:reduce, 97]},
 {:"exception.catch.possible"=>[:state, 168],
  :LPAREN=>[:state, 169],
  :LBRACE=>[:reduce, 104]},
 {:$default=>[:reduce, 6]},
 {:RPAREN=>[:reduce, 60], :COMMA=>[:reduce, 60]},
 {:$default=>[:reduce, 70]},
 {:$default=>[:reduce, 72]},
 {:LPAREN=>[:state, 170]},
 {:block=>[:state, 171], :LBRACE=>[:state, 106]},
 {:LPAREN=>[:state, 54],
  :RANGE=>[:state, 55],
  :ERANGE=>[:state, 56],
  :BINOP=>[:state, 57],
  :MINUS=>[:state, 58],
  :PLUS=>[:state, 59],
  :UNOP=>[:state, 60],
  :PROP=>[:state, 61],
  :LBRACK=>[:state, 62],
  :RBRACE=>[:reduce, 82],
  :IDENTIFIER=>[:reduce, 82],
  :MODULE=>[:reduce, 82],
  :CLASS=>[:reduce, 82]},
 {:COLON=>[:state, 172]},
 {:LPAREN=>[:state, 54],
  :RANGE=>[:state, 55],
  :ERANGE=>[:state, 56],
  :BINOP=>[:state, 57],
  :MINUS=>[:state, 58],
  :PLUS=>[:state, 59],
  :UNOP=>[:state, 60],
  :PROP=>[:state, 61],
  :LBRACK=>[:state, 62],
  :RBRACE=>[:reduce, 90],
  :IDENTIFIER=>[:reduce, 90]},
 {:block=>[:state, 173], :LBRACE=>[:state, 106]},
 {:$default=>[:reduce, 96]},
 {:$default=>[:reduce, 99]},
 {:block=>[:state, 174], :LBRACE=>[:state, 106]},
 {:block=>[:state, 175], :LBRACE=>[:state, 106]},
 {:IDENTIFIER=>[:state, 176], :RPAREN=>[:state, 177]},
 {:vexpression=>[:state, 178],
  :NUMBER=>[:state, 25],
  :ISTRING=>[:state, 26],
  :SSTRING=>[:state, 27],
  :KEYWORD=>[:state, 28],
  :REGEX=>[:state, 29],
  :interpolation=>[:state, 30],
  :PLUS=>[:state, 31],
  :MINUS=>[:state, 32],
  :object=>[:state, 33],
  :array=>[:state, 34],
  :function=>[:state, 35],
  :PREUNOP=>[:state, 36],
  :UNOP=>[:state, 37],
  :HEREDOC_REF=>[:state, 38],
  :IHEREDOC_REF=>[:state, 39],
  :LPAREN=>[:state, 40],
  :heredoc=>[:state, 41],
  :vvexpression=>[:state, 14],
  :"interpolation.string"=>[:state, 43],
  :"interpolation.heredoc"=>[:state, 44],
  :LBRACE=>[:state, 45],
  :LBRACK=>[:state, 46],
  :ARROW=>[:state, 47],
  :HEREDOC=>[:state, 48],
  :IHEREDOC=>[:state, 49],
  :IDENTIFIER=>[:state, 42],
  :ISTRING_BEGIN=>[:state, 50],
  :IHEREDOC_BEGIN=>[:state, 51]},
 {:$default=>[:reduce, 75]},
 {:vexpression=>[:state, 179],
  :NUMBER=>[:state, 25],
  :ISTRING=>[:state, 26],
  :SSTRING=>[:state, 27],
  :KEYWORD=>[:state, 28],
  :REGEX=>[:state, 29],
  :interpolation=>[:state, 30],
  :PLUS=>[:state, 31],
  :MINUS=>[:state, 32],
  :object=>[:state, 33],
  :array=>[:state, 34],
  :function=>[:state, 35],
  :PREUNOP=>[:state, 36],
  :UNOP=>[:state, 37],
  :HEREDOC_REF=>[:state, 38],
  :IHEREDOC_REF=>[:state, 39],
  :LPAREN=>[:state, 40],
  :heredoc=>[:state, 41],
  :vvexpression=>[:state, 14],
  :"interpolation.string"=>[:state, 43],
  :"interpolation.heredoc"=>[:state, 44],
  :LBRACE=>[:state, 45],
  :LBRACK=>[:state, 46],
  :ARROW=>[:state, 47],
  :HEREDOC=>[:state, 48],
  :IHEREDOC=>[:state, 49],
  :IDENTIFIER=>[:state, 42],
  :ISTRING_BEGIN=>[:state, 50],
  :IHEREDOC_BEGIN=>[:state, 51]},
 {:$default=>[:reduce, 92]},
 {:$default=>[:reduce, 105]},
 {:$default=>[:reduce, 101]},
 {:RPAREN=>[:state, 180]},
 {:LBRACE=>[:reduce, 103]},
 {:RPAREN=>[:state, 181],
  :LPAREN=>[:state, 54],
  :RANGE=>[:state, 55],
  :ERANGE=>[:state, 56],
  :BINOP=>[:state, 57],
  :MINUS=>[:state, 58],
  :PLUS=>[:state, 59],
  :UNOP=>[:state, 60],
  :PROP=>[:state, 61],
  :LBRACK=>[:state, 62]},
 {:LPAREN=>[:state, 54],
  :RANGE=>[:state, 55],
  :ERANGE=>[:state, 56],
  :BINOP=>[:state, 57],
  :MINUS=>[:state, 58],
  :PLUS=>[:state, 59],
  :UNOP=>[:state, 60],
  :PROP=>[:state, 61],
  :LBRACK=>[:state, 62],
  :RBRACE=>[:reduce, 83],
  :IDENTIFIER=>[:reduce, 83],
  :MODULE=>[:reduce, 83],
  :CLASS=>[:reduce, 83]},
 {:LBRACE=>[:reduce, 102]},
 {:block=>[:state, 182], :LBRACE=>[:state, 106]},
 {:"conditional.continue.maybe"=>[:state, 183],
  :"conditional.continue"=>[:state, 158],
  :ELSIF=>[:state, 159],
  :ELSE=>[:state, 160],
  :$end=>[:reduce, 73],
  :IF=>[:reduce, 73],
  :UNLESS=>[:reduce, 73],
  :CLASS=>[:reduce, 73],
  :MODULE=>[:reduce, 73],
  :WHILE=>[:reduce, 73],
  :FOR=>[:reduce, 73],
  :RETURN=>[:reduce, 73],
  :ACTION=>[:reduce, 73],
  :TRY=>[:reduce, 73],
  :COLON=>[:reduce, 73],
  :NUMBER=>[:reduce, 73],
  :ISTRING=>[:reduce, 73],
  :SSTRING=>[:reduce, 73],
  :KEYWORD=>[:reduce, 73],
  :REGEX=>[:reduce, 73],
  :ISTRING_BEGIN=>[:reduce, 73],
  :IHEREDOC_BEGIN=>[:reduce, 73],
  :PLUS=>[:reduce, 73],
  :MINUS=>[:reduce, 73],
  :LBRACE=>[:reduce, 73],
  :LBRACK=>[:reduce, 73],
  :ARROW=>[:reduce, 73],
  :PREUNOP=>[:reduce, 73],
  :UNOP=>[:reduce, 73],
  :HEREDOC_REF=>[:reduce, 73],
  :IHEREDOC_REF=>[:reduce, 73],
  :LPAREN=>[:reduce, 73],
  :HEREDOC=>[:reduce, 73],
  :IHEREDOC=>[:reduce, 73],
  :RANGE=>[:reduce, 73],
  :ERANGE=>[:reduce, 73],
  :BINOP=>[:reduce, 73],
  :PROP=>[:reduce, 73],
  :IDENTIFIER=>[:reduce, 73],
  :NEWLINE=>[:reduce, 73],
  :RBRACE=>[:reduce, 73],
  :RBRACK=>[:reduce, 73]},
 {:$default=>[:reduce, 74]}]
.freeze

# The default action that is taken for most reductions.
#
# @return [Proc]
DEFAULT_PROC = proc { |_| _ }
# A list of all of the productions.  Only includes the left-hand side,
# the number of tokens on the right-hand side, and the block to call
# on reduction.
#
# @return [Array<Array<(Symbol, Numeric, Proc)>>]
PRODUCTIONS  = [[:$start, 2, DEFAULT_PROC],
[:main, 1, DEFAULT_PROC],
[:"expressions.maybe", 1, DEFAULT_PROC],
[:"expressions.maybe", 0, proc { nil }],
[:expressions, 2, proc { |a, b| a << b }],
[:expressions, 1, proc { |a| [a] }],
[:block, 3, proc { |_, a, _| [:block, a] }],
[:block_or_vexpression, 1, DEFAULT_PROC],
[:block_or_vexpression, 1, DEFAULT_PROC],
[:expression, 1, DEFAULT_PROC],
[:expression, 1, DEFAULT_PROC],
[:expression, 1, DEFAULT_PROC],
[:expression, 1, DEFAULT_PROC],
[:expression, 1, DEFAULT_PROC],
[:expression, 1, DEFAULT_PROC],
[:expression, 1, DEFAULT_PROC],
[:expression, 1, DEFAULT_PROC],
[:expression, 1, proc { nil }],
[:expression, 3, proc { |a, _, b| [:set, a, b] }],
[:vexpression, 1, DEFAULT_PROC],
[:vexpression, 1, DEFAULT_PROC],
[:vexpression, 1, DEFAULT_PROC],
[:vexpression, 1, DEFAULT_PROC],
[:vexpression, 1, DEFAULT_PROC],
[:vexpression, 1, DEFAULT_PROC],
[:vexpression, 2, proc { |_, a| [:pos, a] }],
[:vexpression, 2, proc { |_, a| [:neg, a] }],
[:vexpression, 1, DEFAULT_PROC],
[:vexpression, 1, DEFAULT_PROC],
[:vexpression, 1, DEFAULT_PROC],
[:vexpression, 2, proc { |a, b| [:unop, a, b] }],
[:vexpression, 2, proc { |a, b| [:unop, a, b] }],
[:vexpression, 1, DEFAULT_PROC],
[:vexpression, 1, DEFAULT_PROC],
[:vexpression, 3, proc { |_, a, _| a }],
[:vexpression, 1, DEFAULT_PROC],
[:vexpression, 4, proc { |a, _, b, _| [:call, a, b] }],
[:vexpression, 3, proc { |a, _, b| [:range, a, b] }],
[:vexpression, 3, proc { |a, _, b| [:erange, a, b] }],
[:vexpression, 3, proc { |a, b, c| [:binop, a, b, c] }],
[:vexpression, 3, proc { |a, b, c| [:binop, a, b, c] }],
[:vexpression, 3, proc { |a, b, c| [:plus, a, b, c] }],
[:vexpression, 2, proc { |a, b| [:unop, a, b] }],
[:vexpression, 1, DEFAULT_PROC],
[:vvexpression, 3, proc { |a, _, b| [:prop, a, b] }],
[:vvexpression, 4, proc { |a, _, b| [:access, a, b] }],
[:vvexpression, 1, DEFAULT_PROC],
[:"vexpression.parameters.maybe", 1, DEFAULT_PROC],
[:"vexpression.parameters.maybe", 0, DEFAULT_PROC],
[:"vexpression.parameters", 3, proc { |a, _, b| a << b }],
[:"vexpression.parameters", 1, proc { |*a| a }],
[:object, 2, proc { [:object] }],
[:array, 2, proc { [:array] }],
[:function, 3, proc { |_, a, b| [:func, a, b] }],
[:heredoc, 1, DEFAULT_PROC],
[:heredoc, 1, DEFAULT_PROC],
[:"function.arguments.maybe", 3, proc { |_, a, _| a }],
[:"function.arguments.maybe", 0, proc { nil }],
[:"function.arguments.body.maybe", 1, DEFAULT_PROC],
[:"function.arguments.body.maybe", 0, proc { nil }],
[:"function.arguments.body", 3, proc { |a, _, b| a << b }],
[:"function.arguments.body", 1, proc { |a| [a] }],
[:interpolation, 1, DEFAULT_PROC],
[:interpolation, 1, DEFAULT_PROC],
[:"interpolation.heredoc", 3, DEFAULT_PROC],
[:"interpolation.heredoc.finish", 1, DEFAULT_PROC],
[:"interpolation.heredoc.finish", 1, DEFAULT_PROC],
[:"interpolation.string", 3, DEFAULT_PROC],
[:"interpolation.string.finish", 1, DEFAULT_PROC],
[:"interpolation.string.finish", 1, DEFAULT_PROC],
[:conditional, 6, proc { |_, _, a, _, b, c| [:if, a, b, c] }],
[:conditional, 5, proc { |_, _, a, _, b| [:unless, a, b] }],
[:"conditional.continue.maybe", 1, DEFAULT_PROC],
[:"conditional.continue.maybe", 0, proc { nil }],
[:"conditional.continue", 6, proc { |_, _, a, _, b, c| [:elsif, a, b, c] }],
[:"conditional.continue", 2, proc { |_, a| [:else, a] }],
[:class, 5, proc { |_, a, _, b, _| [:class, a, b] }],
[:module, 5, proc { |_, a, _, b, _| [:module, a, b] }],
[:"class.definition.parts.maybe", 1, DEFAULT_PROC],
[:"class.definition.parts.maybe", 0, proc { nil }],
[:"class.definition.parts", 2, proc { |a, b| a << b }],
[:"class.definition.parts", 1, proc { |a| [a] }],
[:"class.definition.part", 3, proc { |a, _, b| [:inst, a, b] }],
[:"class.definition.part", 5, proc { |a, _, b, _, c| [:class, a, b, c] }],
[:"class.definition.part", 1, DEFAULT_PROC],
[:"class.definition.part", 1, DEFAULT_PROC],
[:"module.definition.parts.maybe", 1, DEFAULT_PROC],
[:"module.definition.parts.maybe", 0, proc { nil }],
[:"module.definition.parts", 2, proc { |a, b| a << b }],
[:"module.definition.parts", 1, proc { |a| [a] }],
[:"module.definition.part", 3, proc { |a, _, b| [:inst, a, b] }],
[:loop, 5, proc { |_, _, a, _, b| [:while, a, b] }],
[:loop, 7, proc { |_, _, a, _, b, _, c| [:forin, a, b, c] }],
[:loop, 5, proc { |_, _, a, _, b| [:for, a, b] }],
[:action, 2, proc { |_, a| [:return, a] }],
[:action, 1, DEFAULT_PROC],
[:exception, 6, proc { |_, _, a, _, b, c| [:try, a, b, c] }],
[:"exception.catch.maybe", 1, DEFAULT_PROC],
[:"exception.catch.maybe", 0, proc { nil }],
[:"exception.finally.maybe", 1, DEFAULT_PROC],
[:"exception.finally.maybe", 0, proc { nil }],
[:"exception.catch", 3, proc { |_, a, b| [:catch, a, b] }],
[:"exception.catch.possible", 3, proc { |_, a, _| a }],
[:"exception.catch.possible", 2, proc { nil }],
[:"exception.catch.possible", 0, proc { nil }],
[:"exception.finally", 2, proc { |_, a| [:finally, a ] }],
[:directive, 4, proc { |_, _, a, _| [:directive, a] }]].freeze

# Runs the parser.
#
# @param input [Array] the input to run the parser over.
# @return [Object] the result of the accept.
def parse(input)
  stack = []
  stack.push([nil, 0])
  last  = nil
  input = input.to_a.dup

  until stack.empty? do
    last = parse_action(stack, input)
  end

  last

end

# Actually performs the parsing action on the given stack on input.
# If you want to implement a push parser, than messing with this
# method is probably the way to go.
#
# @param stack [Array<Array<(Object, Numeric)>>] the stack of the
#   parser.  The actual order of the stack is important.
# @param input [Array<Object>] the input to run the parser over.
#   The elements of this may be passed to the `type` method.
# @return [Object] the result of the last accepting reduction.
def parse_action(stack, input)
  last = nil
  peek_token = if input.empty?
    :$end
  else
    type(input.first)
  end

  action = ACTION_TABLE[stack.last.last].fetch(peek_token) do
    ACTION_TABLE[stack.last.last].fetch(:$default)
  end

  case action.first
  when :accept
    production = PRODUCTIONS[action.last]
    last       = stack.pop(production[1]).first.first
    stack.pop
  when :reduce
    production = PRODUCTIONS[action.last]
    removing   = stack.pop(production[1])
    value = instance_exec(*removing.map(&:first), &production[2])
    goto  = ACTION_TABLE[stack.last.last][production[0]]
    stack.push([value, goto.last])
  when :state
    stack.push([input.shift, action.last])
  else
    raise NotImplementedError, "Unknown action #{action.first}"
  end

  last

rescue KeyError => e
  peek = input.first

  if handle_error({
      :stack     => stack,
      :peek      => peek_token,
      :remaining => input,
      :error     => e,
      :line      => line_of(peek),
      :column    => column_of(peek),
      :expected  => ACTION_TABLE[stack.last.last].keys
    })
    retry
  else
    raise
  end
end

private

def line_of(peek)
  if peek.respond_to?(:line)
    peek.line
  else
    0
  end
end

def column_of(peek)
  if peek.respond_to?(:column)
    peek.column
  else
    0
  end
end

def handle_error(data, _ = false)
    raise SyntaxError,
      "Unexpected token #{data[:peek]} on line #{data[:line]}, " \
      "column #{data[:column]}; expected one of " \
      "#{data[:expected].join(', ')}",
      data[:error].backtrace
end

    end
  end
end
