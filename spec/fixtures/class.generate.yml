data: |
  #! allow require set-timeout

  assert = require('assert)

  module Something {
    class Test {

      some-number: 2

      initialize: -> {
        "this should be init"
        wee()
      }

      wee: -> {
        console.log(some-number)
      }

      this.test: -> {
        "class method!"
      }
    }


    class AnotherTest : Test {
      #! cvar another-thing
      thing: -> {
        console.log("[another test]", some-number, another-thing)
      }
    }
  }

  assert.equal(new AnotherTest().some-number, 2)
  set-timeout(()-> {})

  module.exports = Something

compiled: |
  var assert, Something, Test, AnotherTest;

  assert = require('assert');

  Something = Something || {};
  Test = Test || function Test() {
    if(this.initialize) {
      this.initialize.apply(this, arguments);
    }
  };

  Test.prototype.someNumber = 2;

  Test.prototype.initialize = function() {
    "this should be init";
    this.wee();
  };

  Test.prototype.wee = function() {
    console.log(this.someNumber);
  };

  Test.test = function() {
    "class method!";
  };
  Something.Test = Test;

  AnotherTest = AnotherTest || function AnotherTest() {
    if(this.initialize) {
      this.initialize.apply(this, arguments);
    }
  };

  AnotherTest.prototype.__proto__ = Test.prototype;

  AnotherTest.prototype.thing = function() {
    console.log("[another test]", this.someNumber, this.anotherThing);
  };

  Something.AnotherTest = AnotherTest;;

  assert.equal(new AnotherTest().someNumber, 2);
  setTimeout(function(){});

  module.exports = Something;
