data: |
  class Greeter {
    initialize: (name)-> {
        this.name = name
    }

    greet: -> {
        console.log("Hello #{this.name}!")
    }

    this.meet: (first, second)-> {
        new Greeter(first).greet()
        new Greeter(second).greet()
    }
  }

  Greeter.meet("Alice", "Bob")

compiled: |
  var Greeter;
  Greeter = Greeter || function Greeter() {
    if(this.initialize) {
      this.initialize.apply(this, arguments);
    }
  };

  Greeter.prototype.initialize = function(name) {
    this.name = name;
  };

  Greeter.prototype.greet = function() {
    console.log("Hello " + (this.name) + "!");
  };

  Greeter.meet = function(first, second) {
    new Greeter(first).greet();
    new Greeter(second).greet();
  };;

  Greeter.meet("Alice", "Bob");
