data: |
  Test = require("some_module/test")

  module SomeModule {
    class Thing {
      initialize: -> {
        this.test = new Test()
      }

      do: (thing)-> {
        return this.test.do(thing)
      }
    }
  }

compiled: |
  var Test, SomeModule, Thing;
  Test = require("some_module/test");
  SomeModule = SomeModule || {};
  Thing = Thing || function Thing() {
    if(this.initialize) {
      this.initialize.apply(this, arguments);
    }
  };

  Thing.prototype.initialize = function() {
    this.test = new Test();
  };

  Thing.prototype.do = function(thing) {
    return this.test.do(thing)
  };
  SomeModule.Thing = Thing;
